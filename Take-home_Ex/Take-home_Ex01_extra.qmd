---
title: "Take-home_Ex01_extra"
format: html
---

<!-- ```{r} -->

<!-- if (!requireNamespace("randomForest", quietly = TRUE)) { -->

<!--   install.packages("randomForest") -->

<!-- } -->

<!-- library(randomForest) -->

<!-- if (!requireNamespace("caret", quietly = TRUE)) { -->

<!--   install.packages("caret") -->

<!-- } -->

<!-- library(caret) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- str(train_data) -->

<!-- ``` -->

<!-- ```{r} -->

<!-- # Load necessary libraries -->

<!-- library(readr) -->

<!-- library(dplyr) -->

<!-- library(ggplot2) -->

<!-- library(stats) -->

<!-- library(randomForest)  # Load Random Forest -->

<!-- library(caret)  # For model evaluation -->

<!-- # Select relevant health-related columns -->

<!-- relevant_factors <- heart_attack_2 %>%  -->

<!--   select("Gender", "Region", "Smoking_History", "Diabetes_History", "Hypertension_History", "Physical_Activity", -->

<!--          "Diet_Quality", "Alcohol_Consumption", "Family_History", "Cholesterol_Level_Category", "Heart_Attack_Occurrence",  -->

<!--          "Stress_Levels_Category", "BMI_Category", "Heart_Rate_Category", "Systolic_BP_Category", "Diastolic_BP_Category") -->

<!-- # Convert categorical variables to factors -->

<!-- relevant_factors <- relevant_factors %>%  -->

<!--   mutate(across(where(is.character), as.factor)) -->

<!-- # ✅ Convert Heart_Attack_Occurrence to a **factor** with levels 0 and 1 -->

<!-- relevant_factors <- relevant_factors %>% -->

<!--   mutate(Heart_Attack_Occurrence = factor(ifelse(Heart_Attack_Occurrence == "Yes", 1, 0), levels = c(0, 1))) -->

<!-- # ✅ Verify conversion -->

<!-- str(relevant_factors$Heart_Attack_Occurrence) -->

<!-- table(relevant_factors$Heart_Attack_Occurrence) -->

<!-- # Split dataset into training and testing sets -->

<!-- set.seed(123) -->

<!-- trainIndex <- createDataPartition(relevant_factors$Heart_Attack_Occurrence, p = 0.7, list = FALSE) -->

<!-- train_data <- relevant_factors[trainIndex, ] -->

<!-- test_data <- relevant_factors[-trainIndex, ] -->

<!-- train_data -->

<!-- # ✅ Ensure Heart_Attack_Occurrence is a factor in both train and test sets -->

<!-- train_data$Heart_Attack_Occurrence <- as.factor(train_data$Heart_Attack_Occurrence) -->

<!-- test_data$Heart_Attack_Occurrence <- as.factor(test_data$Heart_Attack_Occurrence) -->

<!-- # ✅ Check factor levels before training -->

<!-- print(levels(train_data$Heart_Attack_Occurrence)) -->

<!-- # Train a Random Forest model -->

<!-- rf_model <- randomForest(Heart_Attack_Occurrence ~ ., data = train_data, ntree = 500, mtry = 3, importance = TRUE) -->

<!-- print(rf_model) -->

<!-- # Evaluate model on test data -->

<!-- predictions <- predict(rf_model, test_data) -->

<!-- confusionMatrix(predictions, test_data$Heart_Attack_Occurrence) -->

<!-- # Feature importance -->

<!-- importance_rf <- importance(rf_model) -->

<!-- varImpPlot(rf_model) -->

<!-- ``` -->



<!-- ## Code -->
<!-- ```{r} -->
<!-- #- DO NOT DELETE -->
<!-- #| eval = FALSE  -->

<!-- # Load necessary libraries -->
<!-- library(readr) -->
<!-- library(dplyr) -->
<!-- library(ggplot2) -->
<!-- library(stats) -->

<!-- # Select relevant health-related columns -->
<!-- relevant_factors <- heart_attack_2 %>%  -->
<!--   select("Gender", "Region", "Smoking_History", "Diabetes_History", "Hypertension_History", "Physical_Activity", -->
<!--          "Diet_Quality", "Alcohol_Consumption", "Family_History", "Cholesterol_Level_Category", "Heart_Attack_Occurrence",  -->
<!--          "Stress_Levels_Category", "BMI_Category", "Heart_Rate_Category", "Systolic_BP_Category", "Diastolic_BP_Category") -->

<!-- # Convert categorical variables -->
<!-- # Gender encoding -->
<!-- relevant_factors$Gender <- factor(relevant_factors$Gender, levels = c("Male", "Female")) -->

<!-- # Region encoding -->
<!-- relevant_factors$Region <- factor(relevant_factors$Region, levels = c("Rural", "Urban")) -->

<!-- # Smoking_History encoding -->
<!-- relevant_factors$Smoking_History <- factor(relevant_factors$Smoking_History, levels = c("Yes", "No")) -->

<!-- # Diabetes_History encoding -->
<!-- relevant_factors$Diabetes_History <- factor(relevant_factors$Diabetes_History, levels = c("Yes", "No")) -->

<!-- # Hypertension_History encoding -->
<!-- relevant_factors$Hypertension_History <- factor(relevant_factors$Hypertension_History, levels = c("Yes", "No")) -->

<!-- # Physical_Activity is now numeric (Low = 0, Moderate = 1, High = 2) -->
<!-- relevant_factors$Physical_Activity <- recode(relevant_factors$Physical_Activity, "Low" = 0, "Moderate" = 1, "High" = 2) %>% as.numeric() -->

<!-- # Diet_Quality is now numeric (Poor = 0, Average = 1, Good = 2) -->
<!-- relevant_factors$Diet_Quality <- recode(relevant_factors$Diet_Quality, "Poor" = 0, "Average" = 1, "Good" = 2) %>% as.numeric() -->

<!-- # Alcohol_Consumption is now numeric (None = 0, Low = 0, Moderate = 1, High = 2) -->
<!-- relevant_factors$Alcohol_Consumption <- recode(relevant_factors$Alcohol_Consumption, "None" = 0, "Low" = 0, "Moderate" = 1, "High" = 2) %>% as.numeric() -->

<!-- # Family_History encoding -->
<!-- relevant_factors$Family_History <- factor(relevant_factors$Family_History, levels = c("Yes", "No")) -->

<!-- # Cholesterol_Level_Category is now numeric (Low = 0, Moderate = 1, High = 2) -->
<!-- relevant_factors$Cholesterol_Level_Category <- recode(relevant_factors$Cholesterol_Level_Category, "Low" = 0, "Moderate" = 1, "High" = 2) %>% as.numeric() -->

<!-- # Stress_Levels_Category is now numeric (Minimal Stress = 0, Low Stress = 0, Moderate Stress = 1, High Stress = 2) -->
<!-- relevant_factors$Stress_Levels_Category <- recode(relevant_factors$Stress_Levels_Category, -->
<!--   "Miniminal_Stress" = 0, -->
<!--   "Low_Stress" = 0, -->
<!--   "Moderate_Stress" = 1, -->
<!--   "High_Stress" = 2 -->
<!-- ) %>% as.numeric() -->

<!-- # BMI_Category is now numeric (Underweight = 0, Normal_Weight = 1, Overweight = 2, Obese = 2) -->
<!-- relevant_factors$BMI_Category <- recode(relevant_factors$BMI_Category, "Underweight" = 0, "Normal_Weight" = 1, "Overweight" = 2, "Obese" = 2) %>% as.numeric() -->

<!-- # Heart_Rate_Category is now numeric (Low = 0, Normal = 1, High = 2) -->
<!-- relevant_factors$Heart_Rate_Category <- recode(relevant_factors$Heart_Rate_Category, "Low" = 0, "Normal" = 1, "High" = 2) %>% as.numeric() -->

<!-- # Systolic_BP_Category is now numeric (Normal = 0, Elevated = 1, Hypertension_Stage_1 = 2, Hypertension_Stage_2 = 2) -->
<!-- relevant_factors$Systolic_BP_Category <- recode(relevant_factors$Systolic_BP_Category, "Normal" = 0, "Elevated" = 1, "Hypertension_Stage_1" = 2, "Hypertension_Stage_2" = 2) %>% as.numeric() -->

<!-- # Diastolic_BP_Category is now numeric (Normal = 0, Elevated = 1, Hypertension_Stage_1 = 2, Hypertension_Stage_2 = 2) -->
<!-- relevant_factors$Diastolic_BP_Category <- recode(relevant_factors$Diastolic_BP_Category, "Normal" = 0, "Elevated" = 1, "Hypertension_Stage_1" = 2, "Hypertension_Stage_2" = 2) %>% as.numeric() -->

<!-- # Convert Heart_Attack_Occurrence to binary and ensure it remains a factor -->
<!-- relevant_factors$Heart_Attack_Occurrence <- factor(ifelse(relevant_factors$Heart_Attack_Occurrence == "Yes", 1, 0), levels = c(0, 1)) -->

<!-- # Compute correlation matrix for numerical encoding -->
<!-- cor_matrix <- relevant_factors %>%  -->
<!--   mutate(across(where(is.factor), as.numeric)) %>% -->
<!--   select(-Smoking_History, -Heart_Attack_Occurrence) %>% -->
<!--   cor(use = "complete.obs") -->

<!-- print(cor_matrix) -->

<!-- # Run Logistic Regression Model -->
<!-- logistic_model <- glm(Heart_Attack_Occurrence ~ ., data = relevant_factors, family = binomial()) -->

<!-- # Print Model Summary -->
<!-- summary(logistic_model) -->
<!-- ``` -->

:::


<!-- ```{r} -->
<!-- # Load necessary library -->
<!-- library(writexl)  # Or use openxlsx for more features -->

<!-- # Define file path to save the Excel file -->
<!-- file_path <- "C:/andreaysh/ISSS608/try.xlsx" -->

<!-- # Export chi-square test results to Excel -->
<!-- write_xlsx(heart_attack_2, path = file_path) -->

<!-- # Confirm export -->
<!-- print(paste("File saved to:", file_path)) -->
<!-- ``` -->



<!-- ```{r} -->

<!-- # Step 1: Count total individuals in each Age_Category -->

<!-- total_population <- heart_attack_2 %>% -->

<!--   group_by(Age_Category) %>% -->

<!--   summarise(Total_Count = n()) -->

<!-- # Step 2: Count heart attack occurrences by Age_Category -->

<!-- heart_attack_counts <- heart_attack_2 %>% -->

<!--   filter(Heart_Attack_Occurrence == "Yes") %>% -->

<!--   group_by(Age_Category) %>% -->

<!--   summarise(Heart_Attack_Count = n()) -->

<!-- # Step 3: Merge the two tables -->

<!-- normalized_data <- left_join(heart_attack_counts, total_population, by = "Age_Category") %>% -->

<!--   mutate(Normalized_Heart_Attack_Rate = (Heart_Attack_Count / Total_Count) * 100) -->

<!-- # Step 4: Plot the normalized heart attack rate -->

<!-- ggplot(normalized_data, aes(x = Age_Category, y = Normalized_Heart_Attack_Rate, fill = Age_Category)) + -->

<!--   geom_bar(stat = "identity", color = "black", alpha = 0.7) + -->

<!--   labs(title = "Normalized Heart Attack Rate by Age Group", -->

<!--        x = "Age Group", -->

<!--        y = "Heart Attack Rate (Normalized, % of total in group)") + -->

<!--   theme_minimal() + -->

<!--   scale_fill_brewer(palette = "Set2") + -->

<!--   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability -->

<!-- ``` -->


