{
  "hash": "f86f17315028d8ee912d7a2e7eba06d8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 01\"\nauthor: \"Andrea Yeo\"\ndate-modified: \"last-modified\"\ndate: \"February 1, 2025\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n# Heart Attack in Japan Youth Vs Adult\n\n## 1. Overview\n\n### 1.1 Background\n\nThis analysis explores heart attack incidents in Japan, focusing on the differences in risk factors between youth and adult age groups. With the growing global prevalence of heart disease, understanding [*how age influences heart attack likelihood*]{.underline} and [*identifying the strongest predictors*]{.underline} are crucial for shaping targeted prevention strategies and healthcare interventions.\n\nThe dataset from Kaggle - [Heart Attack in Japan Youth Vs Adult](https://www.kaggle.com/datasets/ashaychoudhary/heart-attack-in-japan-youth-vs-adult) provides an opportunity to analyze these aspects, helping healthcare providers, policymakers, and researchers develop age-specific awareness campaigns, preventive measures, and resource allocation strategies tailored to reducing heart attack risks in Japan.\n\n### 1.2 Research objective\n\nUsing the [Heart Attack in Japan: Youth vs. Adult](https://www.kaggle.com/datasets/ashaychoudhary/heart-attack-in-japan-youth-vs-adult) dataset, this Take-home_Ex01 applies appropriate Exploratory Data Analysis (EDA) methods, using the [tidyverse](https://www.tidyverse.org/) package and [ggplot](https://www.rdocumentation.org/packages/ggplot2/versions/0.9.0/topics/ggplot) functions to:\n\n-   **explore how age influences the likelihood of heart attack incidents**\n-   **identify the strongest predictors contributing to heart attack incidents**\n\n## 2. Getting started\n\n### 2.1 Loading the packages\n\nThe following R packages will be loaded for this exercise using `pacman::p_load()`:\n\n-   [**readr**](https://www.rdocumentation.org/packages/readr/versions/2.1.5): Part of a tidyverse package for fast and efficient reading of rectangular data (CSV, TSV, and other delimited files) into R\n-   [**dplyr**](https://www.rdocumentation.org/packages/dplyr/versions/0.5.0): Part of a tidyverse package for efficient data manipulation, including filtering, selecting, mutating, summarizing, and grouping data in R\n-   [**ggplot2**](https://www.rdocumentation.org/packages/ggplot2/versions/3.5.0): Part of a tidyverse package allowing for flexible and layered creation of complex plots\n-   [**tidyverse**](https://www.rdocumentation.org/packages/tidyverse/versions/2.0.0): A collection of R packages for data manipulation, visualization, and analysis\n-   [**knitr**](https://www.rdocumentation.org/packages/knitr/versions/1.48): Enables dynamic report generation with R Markdown\n-   [**patchwork**](https://www.rdocumentation.org/packages/patchwork/versions/0.0.1): Combines multiple ggplot2 plots into a single layout\n-   [**ggthemes**](https://www.rdocumentation.org/packages/ggthemes/versions/5.1.0): Provides additional themes and scales for ggplot2\n-   [**scales**](https://www.rdocumentation.org/packages/scales/versions/0.4.1): Enhances visualization by formatting axes and legends in ggplot2\n-   [**ggridges**](https://www.rdocumentation.org/packages/ggridges/versions/0.5.6): Creates ridge plots for density visualization\n-   [**ggpubr**](https://www.rdocumentation.org/packages/ggpubr/versions/0.6.0): Simplifies publication-ready ggplot2 visualizations\n-   [**gganimate**](https://www.rdocumentation.org/packages/gganimate/versions/1.0.9): Adds animation capabilities to ggplot2 graphics\n-   [**ggdist**](https://www.rdocumentation.org/packages/ggdist/versions/3.3.2): Visualizes uncertainty and statistical distributions in ggplot2\n-   [**ggtext**](https://www.rdocumentation.org/packages/ggtext/versions/0.1.2): Enhances text rendering and formatting in ggplot2\n-   [**ggalt**](https://www.rdocumentation.org/packages/GGally/versions/2.2.1): Provides additional geoms, including dumbbell plots and lollipop charts\n-   [**cowplot**](https://www.rdocumentation.org/packages/cowplot/versions/1.1.3): Enhances ggplot2-based layouts and plot annotations\n-   [**ggnewscale**](https://www.rdocumentation.org/packages/ggnewscale/versions/0.4.5): Allows multiple color and fill scales in a single ggplot2 plot\n-   [**ggrepel**](https://www.rdocumentation.org/packages/ggrepel/versions/0.9.6): Prevents overlapping text labels in ggplot2 plots\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, haven, knitr,\n               patchwork, ggthemes, scales,\n               ggridges, ggpubr, gganimate,\n               ggdist, ggtext, ggalt,\n               cowplot, ggnewscale)\n```\n:::\n\n\n\n## 3. Data wrangling & data prepration\n\n### 3.1 Importing the data\n\nThe code chunk below imports the [Heart Attack in Japan: Youth vs. Adult](https://www.kaggle.com/datasets/ashaychoudhary/heart-attack-in-japan-youth-vs-adult) dataset, downloaded from Kaggle, using the read_csv() function from the readr package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_attack <- read_csv(\"data/japan_heart_attack_dataset.csv\", show_col_types = FALSE)\n\nheart_attack\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30,000 × 32\n     Age Gender Region Smoking_History Diabetes_History Hypertension_History\n   <dbl> <chr>  <chr>  <chr>           <chr>            <chr>               \n 1    56 Male   Urban  Yes             No               No                  \n 2    69 Male   Urban  No              No               No                  \n 3    46 Male   Rural  Yes             No               No                  \n 4    32 Female Urban  No              No               No                  \n 5    60 Female Rural  No              No               No                  \n 6    25 Female Rural  No              No               No                  \n 7    78 Male   Urban  No              Yes              Yes                 \n 8    38 Female Urban  Yes             No               No                  \n 9    56 Male   Rural  No              No               Yes                 \n10    75 Male   Urban  No              No               No                  \n# ℹ 29,990 more rows\n# ℹ 26 more variables: Cholesterol_Level <dbl>, Physical_Activity <chr>,\n#   Diet_Quality <chr>, Alcohol_Consumption <chr>, Stress_Levels <dbl>,\n#   BMI <dbl>, Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>, Extra_Column_1 <dbl>,\n#   Extra_Column_2 <dbl>, Extra_Column_3 <dbl>, Extra_Column_4 <dbl>,\n#   Extra_Column_5 <dbl>, Extra_Column_6 <dbl>, Extra_Column_7 <dbl>, …\n```\n\n\n:::\n:::\n\n\n\nThe dataset is structured as a tibble dataframe, containing 30,000 rows and 32 columns. Each observation represents an individual case, and the variables capture key medical and demographic information relevant to heart attack incidents across different age groups in Japan.\n\n### 3.4 Checking the data structure\n\nWe will check the dataset using below\n\n-   `glimpse()`: provides a transposed overview of a dataset, showing variables and their types in a concise format.\n-   `head()`: displays the first few rows of a dataset (default is 6 rows) to give a quick preview of the data.\n-   `summary()`: generates a statistical summary of each variable, including measures like mean, median, and range for numeric data.\n-   `duplicated()`:returns a logical vector indicating which elements or rows in a vector or data frame are duplicates.\n-   `colSums(is.na())`: counts the number of missing values (NA) in each column of the data frame.\n-   `spec()`: use `spec()` to quickly inspect the column\n\n:::::: panel-tabset\n## glimpse()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(heart_attack)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 32\n$ Age                     <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36, 40…\n$ Gender                  <chr> \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"F…\n$ Region                  <chr> \"Urban\", \"Urban\", \"Rural\", \"Urban\", \"Rural\", \"…\n$ Smoking_History         <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Y…\n$ Diabetes_History        <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Hypertension_History    <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No…\n$ Cholesterol_Level       <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223.81…\n$ Physical_Activity       <chr> \"Moderate\", \"Low\", \"Low\", \"Moderate\", \"High\", …\n$ Diet_Quality            <chr> \"Poor\", \"Good\", \"Average\", \"Good\", \"Good\", \"Go…\n$ Alcohol_Consumption     <chr> \"Low\", \"Low\", \"Moderate\", \"High\", \"High\", \"Hig…\n$ Stress_Levels           <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8068…\n$ BMI                     <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.771…\n$ Heart_Rate              <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.667…\n$ Systolic_BP             <dbl> 123.90209, 129.89331, 145.65490, 131.78522, 10…\n$ Diastolic_BP            <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.902…\n$ Family_History          <chr> \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ Heart_Attack_Occurrence <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n$ Extra_Column_1          <dbl> 0.40498852, 0.03627815, 0.85297888, 0.39085280…\n$ Extra_Column_2          <dbl> 0.43330004, 0.51256694, 0.21959083, 0.29684675…\n$ Extra_Column_3          <dbl> 0.62871236, 0.66839275, 0.61343656, 0.15572404…\n$ Extra_Column_4          <dbl> 0.70160955, 0.11552874, 0.50800995, 0.87025144…\n$ Extra_Column_5          <dbl> 0.49814235, 0.42381938, 0.90066981, 0.39035591…\n$ Extra_Column_6          <dbl> 0.007901312, 0.083932768, 0.227205241, 0.40318…\n$ Extra_Column_7          <dbl> 0.79458257, 0.68895108, 0.49634358, 0.74140891…\n$ Extra_Column_8          <dbl> 0.29077922, 0.83016364, 0.75210679, 0.22396813…\n$ Extra_Column_9          <dbl> 0.49719307, 0.63449028, 0.18150125, 0.32931387…\n$ Extra_Column_10         <dbl> 0.52199452, 0.30204337, 0.62918031, 0.14319054…\n$ Extra_Column_11         <dbl> 0.79965663, 0.04368285, 0.01827617, 0.90778075…\n$ Extra_Column_12         <dbl> 0.72239788, 0.45166789, 0.06322702, 0.54232201…\n$ Extra_Column_13         <dbl> 0.1487387, 0.8786714, 0.1465122, 0.9224606, 0.…\n$ Extra_Column_14         <dbl> 0.8340099, 0.5356022, 0.9972962, 0.6262165, 0.…\n$ Extra_Column_15         <dbl> 0.061632229, 0.617825340, 0.974455410, 0.22860…\n```\n\n\n:::\n:::\n\n\n\n## head()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(heart_attack)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 32\n    Age Gender Region Smoking_History Diabetes_History Hypertension_History\n  <dbl> <chr>  <chr>  <chr>           <chr>            <chr>               \n1    56 Male   Urban  Yes             No               No                  \n2    69 Male   Urban  No              No               No                  \n3    46 Male   Rural  Yes             No               No                  \n4    32 Female Urban  No              No               No                  \n5    60 Female Rural  No              No               No                  \n6    25 Female Rural  No              No               No                  \n# ℹ 26 more variables: Cholesterol_Level <dbl>, Physical_Activity <chr>,\n#   Diet_Quality <chr>, Alcohol_Consumption <chr>, Stress_Levels <dbl>,\n#   BMI <dbl>, Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>, Extra_Column_1 <dbl>,\n#   Extra_Column_2 <dbl>, Extra_Column_3 <dbl>, Extra_Column_4 <dbl>,\n#   Extra_Column_5 <dbl>, Extra_Column_6 <dbl>, Extra_Column_7 <dbl>,\n#   Extra_Column_8 <dbl>, Extra_Column_9 <dbl>, Extra_Column_10 <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n## summary()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(heart_attack)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Age           Gender             Region          Smoking_History   \n Min.   :18.00   Length:30000       Length:30000       Length:30000      \n 1st Qu.:33.00   Class :character   Class :character   Class :character  \n Median :48.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :48.49                                                           \n 3rd Qu.:64.00                                                           \n Max.   :79.00                                                           \n Diabetes_History   Hypertension_History Cholesterol_Level Physical_Activity \n Length:30000       Length:30000         Min.   : 80.02    Length:30000      \n Class :character   Class :character     1st Qu.:179.55    Class :character  \n Mode  :character   Mode  :character     Median :199.77    Mode  :character  \n                                         Mean   :199.90                      \n                                         3rd Qu.:220.16                      \n                                         Max.   :336.86                      \n Diet_Quality       Alcohol_Consumption Stress_Levels         BMI       \n Length:30000       Length:30000        Min.   : 0.000   Min.   : 5.58  \n Class :character   Class :character    1st Qu.: 3.644   1st Qu.:21.63  \n Mode  :character   Mode  :character    Median : 4.993   Median :24.96  \n                                        Mean   : 5.002   Mean   :25.00  \n                                        3rd Qu.: 6.353   3rd Qu.:28.36  \n                                        Max.   :10.000   Max.   :46.10  \n   Heart_Rate      Systolic_BP      Diastolic_BP    Family_History    \n Min.   : 30.03   Min.   : 56.23   Min.   : 39.95   Length:30000      \n 1st Qu.: 63.25   1st Qu.:109.79   1st Qu.: 73.26   Class :character  \n Median : 69.95   Median :119.90   Median : 80.12   Mode  :character  \n Mean   : 69.98   Mean   :119.91   Mean   : 80.03                     \n 3rd Qu.: 76.66   3rd Qu.:130.02   3rd Qu.: 86.76                     \n Max.   :108.78   Max.   :178.77   Max.   :117.67                     \n Heart_Attack_Occurrence Extra_Column_1      Extra_Column_2     \n Length:30000            Min.   :0.0000071   Min.   :0.0000052  \n Class :character        1st Qu.:0.2533084   1st Qu.:0.2473606  \n Mode  :character        Median :0.5008204   Median :0.4961980  \n                         Mean   :0.5019388   Mean   :0.4978940  \n                         3rd Qu.:0.7505286   3rd Qu.:0.7473954  \n                         Max.   :0.9999654   Max.   :0.9999894  \n Extra_Column_3      Extra_Column_4      Extra_Column_5     \n Min.   :0.0000227   Min.   :0.0000934   Min.   :0.0001051  \n 1st Qu.:0.2483093   1st Qu.:0.2522110   1st Qu.:0.2518029  \n Median :0.4976104   Median :0.4976175   Median :0.5019871  \n Mean   :0.4981949   Mean   :0.5005952   Mean   :0.5014100  \n 3rd Qu.:0.7476807   3rd Qu.:0.7505662   3rd Qu.:0.7536569  \n Max.   :0.9999694   Max.   :0.9999869   Max.   :0.9999949  \n Extra_Column_6      Extra_Column_7      Extra_Column_8     \n Min.   :0.0000531   Min.   :0.0000678   Min.   :0.0000449  \n 1st Qu.:0.2559989   1st Qu.:0.2482839   1st Qu.:0.2509790  \n Median :0.5017726   Median :0.4988157   Median :0.4985698  \n Mean   :0.5027631   Mean   :0.4980753   Mean   :0.5003557  \n 3rd Qu.:0.7511886   3rd Qu.:0.7456378   3rd Qu.:0.7507293  \n Max.   :0.9998892   Max.   :0.9999900   Max.   :0.9999300  \n Extra_Column_9      Extra_Column_10     Extra_Column_11    \n Min.   :0.0000305   Min.   :0.0000133   Min.   :0.0000008  \n 1st Qu.:0.2502452   1st Qu.:0.2484256   1st Qu.:0.2538092  \n Median :0.4984491   Median :0.5031040   Median :0.5067589  \n Mean   :0.5002292   Mean   :0.5010694   Mean   :0.5044949  \n 3rd Qu.:0.7512186   3rd Qu.:0.7522686   3rd Qu.:0.7556257  \n Max.   :0.9999852   Max.   :0.9999928   Max.   :0.9999578  \n Extra_Column_12     Extra_Column_13     Extra_Column_14    \n Min.   :0.0000713   Min.   :0.0000204   Min.   :0.0000025  \n 1st Qu.:0.2505341   1st Qu.:0.2473108   1st Qu.:0.2482152  \n Median :0.5038609   Median :0.5041162   Median :0.4943841  \n Mean   :0.5008624   Mean   :0.5004557   Mean   :0.4976507  \n 3rd Qu.:0.7511780   3rd Qu.:0.7497094   3rd Qu.:0.7456212  \n Max.   :0.9999484   Max.   :0.9999451   Max.   :0.9999779  \n Extra_Column_15    \n Min.   :0.0000241  \n 1st Qu.:0.2482573  \n Median :0.5009406  \n Mean   :0.4999634  \n 3rd Qu.:0.7487379  \n Max.   :0.9999913  \n```\n\n\n:::\n:::\n\n\n\n## duplicated()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_attack[duplicated(heart_attack),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 32\n# ℹ 32 variables: Age <dbl>, Gender <chr>, Region <chr>, Smoking_History <chr>,\n#   Diabetes_History <chr>, Hypertension_History <chr>,\n#   Cholesterol_Level <dbl>, Physical_Activity <chr>, Diet_Quality <chr>,\n#   Alcohol_Consumption <chr>, Stress_Levels <dbl>, BMI <dbl>,\n#   Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>, Extra_Column_1 <dbl>,\n#   Extra_Column_2 <dbl>, Extra_Column_3 <dbl>, Extra_Column_4 <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n-   Ensure that there are no duplicated columns, if not will have to investigate further.\n:::\n\n## colSum(is.na())\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(heart_attack))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                    Age                  Gender                  Region \n                      0                       0                       0 \n        Smoking_History        Diabetes_History    Hypertension_History \n                      0                       0                       0 \n      Cholesterol_Level       Physical_Activity            Diet_Quality \n                      0                       0                       0 \n    Alcohol_Consumption           Stress_Levels                     BMI \n                      0                       0                       0 \n             Heart_Rate             Systolic_BP            Diastolic_BP \n                      0                       0                       0 \n         Family_History Heart_Attack_Occurrence          Extra_Column_1 \n                      0                       0                       0 \n         Extra_Column_2          Extra_Column_3          Extra_Column_4 \n                      0                       0                       0 \n         Extra_Column_5          Extra_Column_6          Extra_Column_7 \n                      0                       0                       0 \n         Extra_Column_8          Extra_Column_9         Extra_Column_10 \n                      0                       0                       0 \n        Extra_Column_11         Extra_Column_12         Extra_Column_13 \n                      0                       0                       0 \n        Extra_Column_14         Extra_Column_15 \n                      0                       0 \n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n-   Ensure that there are no NA values, if not will have to investigate further.\n-   Possibility to use `drop_na()` function to drop rows where any specified column contains a missing value.\n:::\n\n## spec())\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspec(heart_attack)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncols(\n  Age = col_double(),\n  Gender = col_character(),\n  Region = col_character(),\n  Smoking_History = col_character(),\n  Diabetes_History = col_character(),\n  Hypertension_History = col_character(),\n  Cholesterol_Level = col_double(),\n  Physical_Activity = col_character(),\n  Diet_Quality = col_character(),\n  Alcohol_Consumption = col_character(),\n  Stress_Levels = col_double(),\n  BMI = col_double(),\n  Heart_Rate = col_double(),\n  Systolic_BP = col_double(),\n  Diastolic_BP = col_double(),\n  Family_History = col_character(),\n  Heart_Attack_Occurrence = col_character(),\n  Extra_Column_1 = col_double(),\n  Extra_Column_2 = col_double(),\n  Extra_Column_3 = col_double(),\n  Extra_Column_4 = col_double(),\n  Extra_Column_5 = col_double(),\n  Extra_Column_6 = col_double(),\n  Extra_Column_7 = col_double(),\n  Extra_Column_8 = col_double(),\n  Extra_Column_9 = col_double(),\n  Extra_Column_10 = col_double(),\n  Extra_Column_11 = col_double(),\n  Extra_Column_12 = col_double(),\n  Extra_Column_13 = col_double(),\n  Extra_Column_14 = col_double(),\n  Extra_Column_15 = col_double()\n)\n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n-   Ensure that all variables are correctly classified by data type; recast variable types if needed.\n-   Variables are correctly classified - where categorical variables are classified as **character**, while continuous variables are classified as **double**.\n:::\n::::::\n\nThe heart_attack tibble contains 32 attributes, as shown above.\n\nThe following preprocessing checks were conducted as part of data preparation:\n\n::: callout-tip\n## Preprocessing Checks\n\n-   Verified that the correct data types were loaded in the `heart_attack` dataset using `glimpse()` and `spec()`\n-   Ensured there were no duplicate variable names using `duplicated()` in the dataset\n-   Checked for missing values using `colSums(is.na())`\n:::\n\n### 3.2 Understanding the metadata\n\nThe table below presents the metadata for the dataset, classifying each variable as either categorical or continuous based on its nature and data type.\n\n-   **Categorical attributes:**\n\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Variable Names          | Type       | Description                                                                  |\n    +=========================+============+==============================================================================+\n    | Gender                  | CHAR       | Biological sex of the individual (e.g., Male, Female)                        |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Region                  | CHAR       | Geographic location where the individual resides (e.g., Urban, Rural)        |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Smoking_History         | CHAR       | Past or current smoking habits (e.g., Yes, No)                               |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Diabetes_History        | CHAR       | History of diabetes diagnosis (Yes/No)                                       |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Hypertension_History    | CHAR       | History of high blood pressure diagnosis (Yes/No)                            |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Physical_Activity       | CHAR       | Level of physical activity (e.g., Low, Moderate, High)                       |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Diet_Quality            | CHAR       | Dietary habits and nutritional intake assessment (e.g., Poor, Average, Good) |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Alcohol_Consumption     | CHAR       | Frequency or amount of alcohol intake (e.g., Low, Moderate, High, None)      |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Family_History          | CHAR       | Presence of heart disease in close relatives (Yes/No)                        |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n    | Heart_Attack_Occurrence | CHAR       | Whether the individual has experienced a heart attack (Yes/No)               |\n    +-------------------------+------------+------------------------------------------------------------------------------+\n\n-   **Continuous attributes:**\n\n    +-------------------+--------------+----------------------------------------------------+\n    | Variable Names    | Type         | Description                                        |\n    +===================+==============+====================================================+\n    | Age               | NUM          | Age of the individual in years                     |\n    +-------------------+--------------+----------------------------------------------------+\n    | Cholesterol_Level | NUM          | Measured cholesterol level in the blood            |\n    +-------------------+--------------+----------------------------------------------------+\n    | Stress_Levels     | NUM          | Measured or self-reported stress level             |\n    +-------------------+--------------+----------------------------------------------------+\n    | BMI               | NUM          | Body Mass Index, calculated from height and weight |\n    +-------------------+--------------+----------------------------------------------------+\n    | Heart_Rate        | NUM          | Resting heart rate in beats per minute (bpm)       |\n    +-------------------+--------------+----------------------------------------------------+\n    | Systolic_BP       | NUM          | Systolic blood pressure measurement (mmHg)         |\n    +-------------------+--------------+----------------------------------------------------+\n    | Diastolic_BP      | NUM          | Diastolic blood pressure measurement (mmHg)        |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_1    | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_2    | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_3    | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_4    | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_5    | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_6    | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_7    | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_8    | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_9    | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_10   | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_11   | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_12   | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_13   | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_14   | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n    | Extra_Column_15   | NUM          |                                                    |\n    +-------------------+--------------+----------------------------------------------------+\n\n::: callout-note\n-   Notice that Extra_Column_1 to Extra_Column_15 are additional numeric figures without clear definition.\n-   They are most likely derived calculations from the variables.\n:::\n\n### 3.3 Filtering for relevant variables\n\nOf the 32 variables (columns), only 17 variables(columns) are selected for analysis\n\n-   All columns are selected except for Extra_Column_1 to Extra_Column_15\n\nThe `select()` function in the [dplyr](https://www.rdocumentation.org/packages/dplyr/versions/0.5.0) package is used to obtain these rows, and stored as the R object, `heart_attack_1`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_attack_1 <- heart_attack %>% \n  select(\"Age\", \"Gender\", \"Region\", \"Smoking_History\", \"Diabetes_History\", \n         \"Hypertension_History\", \"Cholesterol_Level\", \"Physical_Activity\", \n         \"Diet_Quality\", \"Alcohol_Consumption\", \"Stress_Levels\", \"BMI\", \n         \"Heart_Rate\", \"Systolic_BP\", \"Diastolic_BP\", \"Family_History\", \n         \"Heart_Attack_Occurrence\")\n\nheart_attack_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30,000 × 17\n     Age Gender Region Smoking_History Diabetes_History Hypertension_History\n   <dbl> <chr>  <chr>  <chr>           <chr>            <chr>               \n 1    56 Male   Urban  Yes             No               No                  \n 2    69 Male   Urban  No              No               No                  \n 3    46 Male   Rural  Yes             No               No                  \n 4    32 Female Urban  No              No               No                  \n 5    60 Female Rural  No              No               No                  \n 6    25 Female Rural  No              No               No                  \n 7    78 Male   Urban  No              Yes              Yes                 \n 8    38 Female Urban  Yes             No               No                  \n 9    56 Male   Rural  No              No               Yes                 \n10    75 Male   Urban  No              No               No                  \n# ℹ 29,990 more rows\n# ℹ 11 more variables: Cholesterol_Level <dbl>, Physical_Activity <chr>,\n#   Diet_Quality <chr>, Alcohol_Consumption <chr>, Stress_Levels <dbl>,\n#   BMI <dbl>, Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>\n```\n\n\n:::\n:::\n\n\n\nThe output shows a tibble dataframe with 30,000 rows and 17 columns.\n\n### 3.5 Recoding and creating of new variables\n\n#### 3.5.1 Recoding continuous variables into categorical variables\n\nIn the following section, we will recode specific continuous variables into categorical groups for better interpretability. While variables like *Cholesterol_Level*, *Stress_Levels*, *BMI*, *Heart_Rate*, *Systolic_BP*, and *Diastolic_BP* provide valuable insights in their continuous form, categorizing them into meaningful groups will enhance our ability to analyze trends and risk factors more effectively.\n\n+-------------------+---------------------+---------------------------------------------------------------------------------------------------+\n| Variable Names    | Measurement         | Categorical ranges [*Approximated classification based on best effort*]{style=\"font-size: 10px;\"} |\n+===================+=====================+===================================================================================================+\n| Cholesterol_Level | mg/dL               | -   **Low:** ≤ 150                                                                                |\n|                   |                     | -   **Moderate:** 151–200                                                                         |\n|                   |                     | -   **High:** \\> 200                                                                              |\n+-------------------+---------------------+---------------------------------------------------------------------------------------------------+\n| Stress_Levels     | Self-reported scale | -   **Miniminal Stress:** 0 \\|                                                                    |\n|                   |                     | -   **Low Stress:** 1–3                                                                           |\n|                   |                     | -   **Moderate Stress:** 4–7                                                                      |\n|                   |                     | -   **High Stress:** 8–10                                                                         |\n+-------------------+---------------------+---------------------------------------------------------------------------------------------------+\n| BMI               | Body Mass Index     | -   **Underweight:** \\< 18.5                                                                      |\n|                   |                     | -   **Normal Weight:** 18.5–24.9                                                                  |\n|                   |                     | -   **Overweight:** 25–29.9                                                                       |\n|                   |                     | -   **Obese:** ≥ 30                                                                               |\n+-------------------+---------------------+---------------------------------------------------------------------------------------------------+\n| Heart_Rate        | beats per minute    | -   **Bradycardia (Low):** \\< 60                                                                  |\n|                   |                     | -   **Normal:** 60–100                                                                            |\n|                   |                     | -   **Tachycardia (High):** \\> 100                                                                |\n+-------------------+---------------------+---------------------------------------------------------------------------------------------------+\n| Systolic_BP       | mmHg                | -   **Normal:** \\< 120                                                                            |\n|                   |                     | -   **Elevated:** 120–129                                                                         |\n|                   |                     | -   **Hypertension Stage 1:** 130–139                                                             |\n|                   |                     | -   **Hypertension Stage 2:** ≥ 140                                                               |\n+-------------------+---------------------+---------------------------------------------------------------------------------------------------+\n| Diastolic_BP      | mmHg                | -   **Normal:** \\< 80                                                                             |\n|                   |                     | -   **Elevated:** 80–89                                                                           |\n|                   |                     | -   **Hypertension Stage 1:** 90–99                                                               |\n|                   |                     | -   **Hypertension Stage 2:** ≥ 100                                                               |\n+-------------------+---------------------+---------------------------------------------------------------------------------------------------+\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nheart_attack_1 <- heart_attack %>%\n  select(\"Age\", \"Gender\", \"Region\", \"Smoking_History\", \"Diabetes_History\", \n         \"Hypertension_History\", \"Cholesterol_Level\", \"Physical_Activity\", \n         \"Diet_Quality\", \"Alcohol_Consumption\", \"Stress_Levels\", \"BMI\", \n         \"Heart_Rate\", \"Systolic_BP\", \"Diastolic_BP\", \"Family_History\", \n         \"Heart_Attack_Occurrence\") %>%\n  mutate(\n    Cholesterol_Level_Category = case_when(\n      Cholesterol_Level <= 150 ~ \"Low\",\n      Cholesterol_Level <= 200 ~ \"Moderate\",\n      TRUE ~ \"High\"\n    ),\n    \n    # **ROUND Stress_Levels before categorization**\n    Rounded_Stress_Levels = round(Stress_Levels), \n    \n    Stress_Levels_Category = case_when(\n      is.na(Rounded_Stress_Levels) ~ \"Unknown\",  # Handle missing values\n      Rounded_Stress_Levels == 0 ~ \"Minimal Stress\",\n      Rounded_Stress_Levels %in% 1:3 ~ \"Low Stress\",\n      Rounded_Stress_Levels %in% 4:7 ~ \"Moderate Stress\",\n      Rounded_Stress_Levels %in% 8:10 ~ \"High Stress\",\n      TRUE ~ \"Unknown\"\n    ),\n    \n    BMI_Category = case_when(\n      BMI < 18.5 ~ \"Underweight\",\n      BMI >= 18.5 & BMI < 25 ~ \"Normal Weight\",\n      BMI >= 25 & BMI < 30 ~ \"Overweight\",\n      BMI >= 30 ~ \"Obese\",\n      TRUE ~ \"Unknown\"\n    ),\n    \n    Heart_Rate_Category = case_when(\n      Heart_Rate < 60 ~ \"Bradycardia (Low)\",\n      Heart_Rate >= 60 & Heart_Rate <= 100 ~ \"Normal\",\n      Heart_Rate > 100 ~ \"Tachycardia (High)\",\n      TRUE ~ \"Unknown\"\n    ),\n    \n    Systolic_BP_Category = case_when(\n      Systolic_BP < 120 ~ \"Normal\",\n      Systolic_BP >= 120 & Systolic_BP < 130 ~ \"Elevated\",\n      Systolic_BP >= 130 & Systolic_BP < 140 ~ \"Hypertension Stage 1\",\n      Systolic_BP >= 140 ~ \"Hypertension Stage 2\",\n      TRUE ~ \"Unknown\"\n    ),\n    \n    Diastolic_BP_Category = case_when(\n      Diastolic_BP < 80 ~ \"Normal\",\n      Diastolic_BP >= 80 & Diastolic_BP < 90 ~ \"Elevated\",\n      Diastolic_BP >= 90 & Diastolic_BP < 100 ~ \"Hypertension Stage 1\",\n      Diastolic_BP >= 100 ~ \"Hypertension Stage 2\",\n      TRUE ~ \"Unknown\"\n    )\n  )\n\n# View the modified dataframe with new categorical variables\nheart_attack_1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30,000 × 24\n     Age Gender Region Smoking_History Diabetes_History Hypertension_History\n   <dbl> <chr>  <chr>  <chr>           <chr>            <chr>               \n 1    56 Male   Urban  Yes             No               No                  \n 2    69 Male   Urban  No              No               No                  \n 3    46 Male   Rural  Yes             No               No                  \n 4    32 Female Urban  No              No               No                  \n 5    60 Female Rural  No              No               No                  \n 6    25 Female Rural  No              No               No                  \n 7    78 Male   Urban  No              Yes              Yes                 \n 8    38 Female Urban  Yes             No               No                  \n 9    56 Male   Rural  No              No               Yes                 \n10    75 Male   Urban  No              No               No                  \n# ℹ 29,990 more rows\n# ℹ 18 more variables: Cholesterol_Level <dbl>, Physical_Activity <chr>,\n#   Diet_Quality <chr>, Alcohol_Consumption <chr>, Stress_Levels <dbl>,\n#   BMI <dbl>, Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>,\n#   Cholesterol_Level_Category <chr>, Rounded_Stress_Levels <dbl>,\n#   Stress_Levels_Category <chr>, BMI_Category <chr>, …\n```\n\n\n:::\n:::\n\n\n\n#### 3.5.2 Recoding `age` into categorical variable\n\nWhile analyzing age as a continuous variable provides detailed insights, categorizing the `Age` variable into distinct age groups allows us to explore how age influences the likelihood of heart attack incidents.\n\nThe table below are the proposed age categories for this analysis:\n\n| Categories         | Age         |\n|--------------------|-------------|\n| Youth              | ≤25 years   |\n| Young adults       | 26–40 years |\n| Middle-aged adults | 41–55 years |\n| Older adults       | 56–70 years |\n| Elderly            | ≥71 years   |\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_attack_2 <- heart_attack_1 %>%\n  mutate(\n    Age_Category = case_when(\n      Age <= 25 ~ \"Youth\",\n      Age >= 26 & Age <= 40 ~ \"Young Adult\",\n      Age >= 41 & Age <= 55 ~ \"Middle-Aged Adult\",\n      Age >= 56 & Age <= 70 ~ \"Older Adult\",\n      Age >= 71 ~ \"Elderly\",\n      TRUE ~ \"Unknown\"\n    )\n  )\n\n# View the updated dataset\nheart_attack_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30,000 × 25\n     Age Gender Region Smoking_History Diabetes_History Hypertension_History\n   <dbl> <chr>  <chr>  <chr>           <chr>            <chr>               \n 1    56 Male   Urban  Yes             No               No                  \n 2    69 Male   Urban  No              No               No                  \n 3    46 Male   Rural  Yes             No               No                  \n 4    32 Female Urban  No              No               No                  \n 5    60 Female Rural  No              No               No                  \n 6    25 Female Rural  No              No               No                  \n 7    78 Male   Urban  No              Yes              Yes                 \n 8    38 Female Urban  Yes             No               No                  \n 9    56 Male   Rural  No              No               Yes                 \n10    75 Male   Urban  No              No               No                  \n# ℹ 29,990 more rows\n# ℹ 19 more variables: Cholesterol_Level <dbl>, Physical_Activity <chr>,\n#   Diet_Quality <chr>, Alcohol_Consumption <chr>, Stress_Levels <dbl>,\n#   BMI <dbl>, Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>,\n#   Cholesterol_Level_Category <chr>, Rounded_Stress_Levels <dbl>,\n#   Stress_Levels_Category <chr>, BMI_Category <chr>, …\n```\n\n\n:::\n:::\n\n\n\n#### 3.5.3 Checking the data structure after filtering and recoding of variables\n\nWe will re-check the dataset after filtering and recoding of continuous variables using below:\n\n:::::: panel-tabset\n## glimpse()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(heart_attack_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30,000\nColumns: 25\n$ Age                        <dbl> 56, 69, 46, 32, 60, 25, 78, 38, 56, 75, 36,…\n$ Gender                     <chr> \"Male\", \"Male\", \"Male\", \"Female\", \"Female\",…\n$ Region                     <chr> \"Urban\", \"Urban\", \"Rural\", \"Urban\", \"Rural\"…\n$ Smoking_History            <chr> \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\",…\n$ Diabetes_History           <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", …\n$ Hypertension_History       <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", …\n$ Cholesterol_Level          <dbl> 186.4002, 185.1367, 210.6966, 211.1655, 223…\n$ Physical_Activity          <chr> \"Moderate\", \"Low\", \"Low\", \"Moderate\", \"High…\n$ Diet_Quality               <chr> \"Poor\", \"Good\", \"Average\", \"Good\", \"Good\", …\n$ Alcohol_Consumption        <chr> \"Low\", \"Low\", \"Moderate\", \"High\", \"High\", \"…\n$ Stress_Levels              <dbl> 3.644786, 3.384056, 3.810911, 6.014878, 6.8…\n$ BMI                        <dbl> 33.96135, 28.24287, 27.60121, 23.71729, 19.…\n$ Heart_Rate                 <dbl> 72.30153, 57.45764, 64.65870, 55.13147, 76.…\n$ Systolic_BP                <dbl> 123.90209, 129.89331, 145.65490, 131.78522,…\n$ Diastolic_BP               <dbl> 85.68281, 73.52426, 71.99481, 68.21133, 92.…\n$ Family_History             <chr> \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", …\n$ Heart_Attack_Occurrence    <chr> \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"…\n$ Cholesterol_Level_Category <chr> \"Moderate\", \"Moderate\", \"High\", \"High\", \"Hi…\n$ Rounded_Stress_Levels      <dbl> 4, 3, 4, 6, 7, 8, 5, 5, 7, 4, 3, 2, 2, 3, 8…\n$ Stress_Levels_Category     <chr> \"Moderate Stress\", \"Low Stress\", \"Moderate …\n$ BMI_Category               <chr> \"Obese\", \"Overweight\", \"Overweight\", \"Norma…\n$ Heart_Rate_Category        <chr> \"Normal\", \"Bradycardia (Low)\", \"Normal\", \"B…\n$ Systolic_BP_Category       <chr> \"Elevated\", \"Elevated\", \"Hypertension Stage…\n$ Diastolic_BP_Category      <chr> \"Elevated\", \"Normal\", \"Normal\", \"Normal\", \"…\n$ Age_Category               <chr> \"Older Adult\", \"Older Adult\", \"Middle-Aged …\n```\n\n\n:::\n:::\n\n\n\n## head()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(heart_attack_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 25\n    Age Gender Region Smoking_History Diabetes_History Hypertension_History\n  <dbl> <chr>  <chr>  <chr>           <chr>            <chr>               \n1    56 Male   Urban  Yes             No               No                  \n2    69 Male   Urban  No              No               No                  \n3    46 Male   Rural  Yes             No               No                  \n4    32 Female Urban  No              No               No                  \n5    60 Female Rural  No              No               No                  \n6    25 Female Rural  No              No               No                  \n# ℹ 19 more variables: Cholesterol_Level <dbl>, Physical_Activity <chr>,\n#   Diet_Quality <chr>, Alcohol_Consumption <chr>, Stress_Levels <dbl>,\n#   BMI <dbl>, Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>,\n#   Cholesterol_Level_Category <chr>, Rounded_Stress_Levels <dbl>,\n#   Stress_Levels_Category <chr>, BMI_Category <chr>,\n#   Heart_Rate_Category <chr>, Systolic_BP_Category <chr>, …\n```\n\n\n:::\n:::\n\n\n\n## summary()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(heart_attack_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Age           Gender             Region          Smoking_History   \n Min.   :18.00   Length:30000       Length:30000       Length:30000      \n 1st Qu.:33.00   Class :character   Class :character   Class :character  \n Median :48.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   :48.49                                                           \n 3rd Qu.:64.00                                                           \n Max.   :79.00                                                           \n Diabetes_History   Hypertension_History Cholesterol_Level Physical_Activity \n Length:30000       Length:30000         Min.   : 80.02    Length:30000      \n Class :character   Class :character     1st Qu.:179.55    Class :character  \n Mode  :character   Mode  :character     Median :199.77    Mode  :character  \n                                         Mean   :199.90                      \n                                         3rd Qu.:220.16                      \n                                         Max.   :336.86                      \n Diet_Quality       Alcohol_Consumption Stress_Levels         BMI       \n Length:30000       Length:30000        Min.   : 0.000   Min.   : 5.58  \n Class :character   Class :character    1st Qu.: 3.644   1st Qu.:21.63  \n Mode  :character   Mode  :character    Median : 4.993   Median :24.96  \n                                        Mean   : 5.002   Mean   :25.00  \n                                        3rd Qu.: 6.353   3rd Qu.:28.36  \n                                        Max.   :10.000   Max.   :46.10  \n   Heart_Rate      Systolic_BP      Diastolic_BP    Family_History    \n Min.   : 30.03   Min.   : 56.23   Min.   : 39.95   Length:30000      \n 1st Qu.: 63.25   1st Qu.:109.79   1st Qu.: 73.26   Class :character  \n Median : 69.95   Median :119.90   Median : 80.12   Mode  :character  \n Mean   : 69.98   Mean   :119.91   Mean   : 80.03                     \n 3rd Qu.: 76.66   3rd Qu.:130.02   3rd Qu.: 86.76                     \n Max.   :108.78   Max.   :178.77   Max.   :117.67                     \n Heart_Attack_Occurrence Cholesterol_Level_Category Rounded_Stress_Levels\n Length:30000            Length:30000               Min.   : 0.000       \n Class :character        Class :character           1st Qu.: 4.000       \n Mode  :character        Mode  :character           Median : 5.000       \n                                                    Mean   : 4.998       \n                                                    3rd Qu.: 6.000       \n                                                    Max.   :10.000       \n Stress_Levels_Category BMI_Category       Heart_Rate_Category\n Length:30000           Length:30000       Length:30000       \n Class :character       Class :character   Class :character   \n Mode  :character       Mode  :character   Mode  :character   \n                                                              \n                                                              \n                                                              \n Systolic_BP_Category Diastolic_BP_Category Age_Category      \n Length:30000         Length:30000          Length:30000      \n Class :character     Class :character      Class :character  \n Mode  :character     Mode  :character      Mode  :character  \n                                                              \n                                                              \n                                                              \n```\n\n\n:::\n:::\n\n\n\n## duplicated()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheart_attack_2[duplicated(heart_attack_2),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 25\n# ℹ 25 variables: Age <dbl>, Gender <chr>, Region <chr>, Smoking_History <chr>,\n#   Diabetes_History <chr>, Hypertension_History <chr>,\n#   Cholesterol_Level <dbl>, Physical_Activity <chr>, Diet_Quality <chr>,\n#   Alcohol_Consumption <chr>, Stress_Levels <dbl>, BMI <dbl>,\n#   Heart_Rate <dbl>, Systolic_BP <dbl>, Diastolic_BP <dbl>,\n#   Family_History <chr>, Heart_Attack_Occurrence <chr>,\n#   Cholesterol_Level_Category <chr>, Rounded_Stress_Levels <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n-   Ensure that there are no duplicated columns, if not will have to investigate further.\n:::\n\n## colSum(is.na())\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(heart_attack_2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                       Age                     Gender \n                         0                          0 \n                    Region            Smoking_History \n                         0                          0 \n          Diabetes_History       Hypertension_History \n                         0                          0 \n         Cholesterol_Level          Physical_Activity \n                         0                          0 \n              Diet_Quality        Alcohol_Consumption \n                         0                          0 \n             Stress_Levels                        BMI \n                         0                          0 \n                Heart_Rate                Systolic_BP \n                         0                          0 \n              Diastolic_BP             Family_History \n                         0                          0 \n   Heart_Attack_Occurrence Cholesterol_Level_Category \n                         0                          0 \n     Rounded_Stress_Levels     Stress_Levels_Category \n                         0                          0 \n              BMI_Category        Heart_Rate_Category \n                         0                          0 \n      Systolic_BP_Category      Diastolic_BP_Category \n                         0                          0 \n              Age_Category \n                         0 \n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n-   Ensure that there are no NA values, if not will have to investigate further.\n-   Possibility to use `drop_na()` function to drop rows where any specified column contains a missing value.\n:::\n\n## spec())\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspec(heart_attack_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n-   Ensure that all variables are correctly classified by data type; recast variable types if needed.\n-   Variables are correctly classified - where categorical variables are classified as **character**, while continuous variables are classified as **double**.\n:::\n::::::\n\n::: callout-tip\n## Preprocessing Checks\n\n-   Verified that the correct data types were loaded in the `heart_attack` dataset using `glimpse()` and `spec()`\n-   Ensured there were no duplicate variable names using `duplicated()` in the dataset\n-   Checked for missing values using `colSums(is.na())`\n:::\n\nThe final output - `heart_attack_2` shows a tibble dataframe with 30,000 rows and 17 columns.\n\n### 3.6 Exploratory Data Analysis\n\n#### 3.6.1 EDA - check for potential bias in data collection\n\n::: callout-important\n**Key observations**\n\n1.  Uneven representation of age groups\n    -   Noticeably lower number of Youth (≤25 years) and Elderly (≥71 years) compared to the middle age groups\n\n    -   Young adults (26–40 years), middle-aged adults (41–55 years), and older adults (56–70 years) make up the majority of the dataset\n2.  Potential bias in data collection\n    -   Underrepresentation of elderly individuals might inflate their heart attack rate in percentage-based analyses\n\n    -   Low count of youth suggests they may be under-sampled\n\n**What can we do:**\n\n-   In the future, ensure that the data collected are proportionally across all age groups\n-   Check for potential sampling bias\n-   Normalize the heart attack rates based on the total population for each age group\n:::\n\n::: panel-tabset\n## Absolute age count()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Count the number of individuals by exact age\nage_distribution <- heart_attack_2 %>%\n  group_by(Age) %>%\n  summarise(Count = n()) %>%\n  arrange(Age)\n\n# Print age count\nprint(age_distribution)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 62 × 2\n     Age Count\n   <dbl> <int>\n 1    18   478\n 2    19   480\n 3    20   483\n 4    21   483\n 5    22   468\n 6    23   462\n 7    24   466\n 8    25   493\n 9    26   480\n10    27   493\n# ℹ 52 more rows\n```\n\n\n:::\n:::\n\n\n\n## Visualization: Absolute age count()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(age_distribution, aes(x = Age, y = Count)) +\n  geom_bar(stat = \"identity\", fill = \"#78B3EA\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Age Distribution of Individuals in Dataset\",\n       x = \"Age\",\n       y = \"Number of Individuals\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n## Count by Age_Category()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define age category levels in the required order\nage_levels <- c(\n  \"Youth (≤25 years)\",\n  \"Young adults (26–40 years)\",\n  \"Older adults (56–70 years)\",\n  \"Middle-aged adults (41–55 years)\",\n  \"Elderly (≥71 years)\"\n)\n\n# Count individuals by Age Category with ordered factor levels\nage_category_distribution <- heart_attack_2 %>%\n  mutate(Age_Category = case_when(\n    Age <= 25 ~ \"Youth (≤25 years)\",\n    Age >= 26 & Age <= 40 ~ \"Young adults (26–40 years)\",\n    Age >= 41 & Age <= 55 ~ \"Middle-aged adults (41–55 years)\",\n    Age >= 56 & Age <= 70 ~ \"Older adults (56–70 years)\",\n    Age >= 71 ~ \"Elderly (≥71 years)\",\n    TRUE ~ \"Unknown\"\n  )) %>%\n  group_by(Age_Category) %>%\n  summarise(Count = n()) %>%\n  mutate(Age_Category = factor(Age_Category, levels = age_levels)) %>%  # Apply custom sorting\n  arrange(Age_Category)\n\n# Print age category count\nprint(age_category_distribution)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  Age_Category                     Count\n  <fct>                            <int>\n1 Youth (≤25 years)                 3813\n2 Young adults (26–40 years)        7432\n3 Older adults (56–70 years)        7201\n4 Middle-aged adults (41–55 years)  7153\n5 Elderly (≥71 years)               4401\n```\n\n\n:::\n:::\n\n\n\n## Visualization: Age_Category()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualization: Age Category Distribution\nggplot(age_category_distribution, aes(x = Age_Category, y = Count, fill = Age_Category)) +\n  geom_bar(stat = \"identity\", color = \"black\", alpha = 0.7) +\n  \n  # Add text labels above bars\n  geom_text(aes(label = Count), vjust = -0.5, color = \"black\", size = 2.5) +\n  \n  labs(title = \"Age Category Distribution in Dataset\",\n       x = \"Age Category\",\n       y = \"Number of Individuals\") +\n  \n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n:::\n\n#### 3.6.2 EDA 1 - explore how age influences the likelihood of heart attack incidents\n\n##### 3.6.2.1 Age distribution of heart attack patients - histogram\n\nObservations:\n\n-   **Heart Attacks Occur Across All Ages:**\n    -   Histogram shows a wide distribution of heart attack patients across various age groups\n-   **Age Group Variation in Heart Attack Rates:**\n    -   Heart attack rate appears to be relatively stable across most age bins, ranging between 8.6% to 11.3%.\n    -   Highest normalized heart attack rate is in the \\[73,78\\] age bin (\\~11.3%).\n-   **Slight Increase in Middle-Aged & Elderly Groups:**\n    -   Gradual increase in heart attack rates from younger groups to middle-aged adults - \\[43,48\\] (10.8%) and \\[48,53\\] (11.0%).\n    -   Heart attack remains high in the older and elderly groups, suggesting that heart attack risk increases with age.\n\n:::: panel-tabset\n## Code()\n\n::: callout-note\n-   The `cut()`function was used to divide a continuous variable (like Age) into discrete intervals such as bins.\n-   `cut()` function is part of Base R, which does not require any additional packages to use.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Step 1: Remove any NA values in Age before binning\nheart_attack_2 <- heart_attack_2 %>%\n  filter(!is.na(Age)) %>%  # Remove missing Age values\n  mutate(Age_Bin = cut(Age, \n                       breaks = seq(floor(min(Age, na.rm = TRUE)), \n                                    ceiling(max(Age, na.rm = TRUE)) + 5,  \n                                    by = 5), \n                       right = FALSE))  \n\n# Step 2: Count total individuals per age bin\ntotal_population <- heart_attack_2 %>%\n  group_by(Age_Bin) %>%\n  summarise(Total_Count = n(), .groups = \"drop\")\n\n# Step 3: Count heart attack occurrences per age bin\nheart_attack_counts <- heart_attack_2 %>%\n  filter(Heart_Attack_Occurrence == \"Yes\") %>%\n  group_by(Age_Bin) %>%\n  summarise(Heart_Attack_Count = n(), .groups = \"drop\")\n\n# Step 4: Merge the two tables and replace NA values with 0\nnormalized_data <- left_join(total_population, heart_attack_counts, by = \"Age_Bin\") %>%\n  mutate(Heart_Attack_Count = replace_na(Heart_Attack_Count, 0),  # Replace NA counts with 0\n         Normalized_Heart_Attack_Rate = (Heart_Attack_Count / Total_Count) * 100) %>%\n  filter(!is.na(Age_Bin))  # Ensure Age_Bin does not contain NA values\n\n# Step 5: Create the normalized histogram\nggplot(normalized_data, aes(x = Age_Bin, y = Normalized_Heart_Attack_Rate, fill = Age_Bin)) +\n  geom_bar(stat = \"identity\", color = \"black\", alpha = 0.7) +\n  \n  # Add text labels showing the percentage per bin\n  geom_text(aes(label = sprintf(\"%.1f%%\", Normalized_Heart_Attack_Rate)), vjust = -0.5, color = \"black\") +\n  \n  labs(title = \"Normalized Age Distribution of Heart Attack Patients\",\n       x = \"Age Groups (Binned by 5 Years)\",\n       y = \"Heart Attack Rate (Normalized, % of total in group)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  \n```\n:::\n\n\n\n## Graph()\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n::::\n\n##### 3.6.1.1 Heart attack rate by age group\n\nAnother point of view, categorizing ages into groups and calculating the heart attack rate for each group.\n\n::: panel-tabset\n## Code()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define Age Category Labels with Age Ranges\nage_labels <- c(\n  \"Youth (≤25 years)\", \n  \"Young adults (26–40 years)\", \n  \"Middle-aged adults (41–55 years)\", \n  \"Older adults (56–70 years)\", \n  \"Elderly (≥71 years)\"\n)\n\n# Count total individuals per age category\ntotal_population <- heart_attack_2 %>%\n  group_by(Age_Category) %>%\n  summarise(Total_Count = n())\n\n# Count heart attack occurrences per age category\nheart_attack_counts <- heart_attack_2 %>%\n  filter(Heart_Attack_Occurrence == \"Yes\") %>%\n  group_by(Age_Category) %>%\n  summarise(Heart_Attack_Count = n())\n\n# Merge both datasets and calculate the normalized heart attack rate\nnormalized_data <- left_join(heart_attack_counts, total_population, by = \"Age_Category\") %>%\n  mutate(Normalized_Heart_Attack_Rate = (Heart_Attack_Count / Total_Count) * 100) %>%\n  \n  # Convert Age_Category into a factor with labels\n  mutate(Age_Category = factor(Age_Category, \n                               levels = c(\"Youth\", \"Young Adult\", \"Middle-Aged Adult\", \"Older Adult\", \"Elderly\"), \n                               labels = age_labels))\n\n# Create bar plot with normalized rates\nggplot(normalized_data, aes(x = Age_Category, y = Normalized_Heart_Attack_Rate, fill = Age_Category)) +\n  geom_bar(stat = \"identity\", color = \"black\", alpha = 0.7) +\n  \n  # Add data labels to show percentages\n  geom_text(aes(label = sprintf(\"%.1f%%\", Normalized_Heart_Attack_Rate)), vjust = -0.5, color = \"black\",size = 2.5) +\n  \n  labs(title = \"Normalized Heart Attack Rate by Age Group\",\n       x = \"Age Group\",\n       y = \"Heart Attack Rate (% of total in group)\",\n       fill = \"Age Categories (with Ranges)\") +  # Updated legend title\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        axis.text.y = element_text(size = 8))  \n```\n:::\n\n\n\n## Graph()\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n:::\n\n<!-- ```{r} -->\n\n<!-- # Step 1: Count total individuals in each Age_Category -->\n\n<!-- total_population <- heart_attack_2 %>% -->\n\n<!--   group_by(Age_Category) %>% -->\n\n<!--   summarise(Total_Count = n()) -->\n\n<!-- # Step 2: Count heart attack occurrences by Age_Category -->\n\n<!-- heart_attack_counts <- heart_attack_2 %>% -->\n\n<!--   filter(Heart_Attack_Occurrence == \"Yes\") %>% -->\n\n<!--   group_by(Age_Category) %>% -->\n\n<!--   summarise(Heart_Attack_Count = n()) -->\n\n<!-- # Step 3: Merge the two tables -->\n\n<!-- normalized_data <- left_join(heart_attack_counts, total_population, by = \"Age_Category\") %>% -->\n\n<!--   mutate(Normalized_Heart_Attack_Rate = (Heart_Attack_Count / Total_Count) * 100) -->\n\n<!-- # Step 4: Plot the normalized heart attack rate -->\n\n<!-- ggplot(normalized_data, aes(x = Age_Category, y = Normalized_Heart_Attack_Rate, fill = Age_Category)) + -->\n\n<!--   geom_bar(stat = \"identity\", color = \"black\", alpha = 0.7) + -->\n\n<!--   labs(title = \"Normalized Heart Attack Rate by Age Group\", -->\n\n<!--        x = \"Age Group\", -->\n\n<!--        y = \"Heart Attack Rate (Normalized, % of total in group)\") + -->\n\n<!--   theme_minimal() + -->\n\n<!--   scale_fill_brewer(palette = \"Set2\") + -->\n\n<!--   theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability -->\n\n<!-- ``` -->\n\n-   Ch :::::\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}