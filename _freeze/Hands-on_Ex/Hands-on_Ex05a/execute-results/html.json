{
  "hash": "4d9be2466a798911c41130f7368030b2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 05a\"\nauthor: \"Andrea Yeo\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n[With the assistance of ChatGPT]{style=\"font-size: 14px;\"}\n\n## 5. Creating Ternary Plot with R\n\n### 5.1 Overview\n\nTernary plots visualize three-part compositional data, such as population age groups or soil composition. Displayed as a triangle with sides scaled from 0 to 1, each side represents a component. Points are plotted based on their proportions, with perpendicular lines indicating their values.\n\nIn this hands-on exercise, we will learn how to create a ternary plot in R to visualize and analyze Singapore’s population structure. The steps include:\n\n-   Installing and loading [tidyverse](https://www.rdocumentation.org/packages/tidyverse/versions/2.0.0) and [ggtern](https://www.rdocumentation.org/packages/ggtern/versions/1.0.2.0/topics/ggtern) packages.\n-   Using `mutate()` from dplyr to derive three new measures.\n-   Creating a static ternary plot with `ggtern()`.\n-   Building an interactive ternary plot using plot_ly() from Plotly.\n\n### 5.2 Installing and launching R packages\n\nFor this exercise, we will use two primary R packages:\n\n-   [ggtern](https://www.rdocumentation.org/packages/ggtern/versions/1.0.2.0/topics/ggtern) – A ggplot extension designed specifically for creating ternary diagrams (static ternary plots).\n-   [Plotly R](https://www.rdocumentation.org/packages/plotly/versions/4.10.4) – A package that enables interactive web-based graphs, using the ggplotly function to convert ggplot2 figures into interactive Plotly objects.\n\nAdditionally, we will install and load key tidyverse packages, including **readr**, **dplyr**, and **tidyr**, for data handling and manipulation.\n\nSince the current ggtern package is incompatible with the latest ggplot2 version, we will install ggplot2 version 3.2.1 instead.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(plotly, ggtern, tidyverse)\n```\n:::\n\n\n\n### 5.3 Data preparation\n#### 5.3.1 The data\n\nFor this hands-on exercise, we will use the [Singapore Residents by Planning Area/Subzone, Age Group, Sex, and Type of Dwelling (June 2000-2018)](https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data) dataset. The dataset, named *\"respopagsex2000to2018_tidy.csv\"*, has already been downloaded and is stored in the data sub-folder within the exercise directory. It is in CSV format.\n\n#### 5.3.2 Importing data\nTo import *\"respopagsex2000to2018_tidy.csv\"* into R, we will use the **read_csv()** function from the **readr** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Reading the data into R environment\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n```\n:::\n\n\n\n#### 5.3.3 Preparing the data\n\nNext, use the `mutate()` function from the [dplyr](https://www.rdocumentation.org/packages/dplyr/versions/0.5.0) package to create three new measures: young, active, and old.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Deriving the young, economy active and old measures\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n```\n:::\n\n\n\n### 5.4 Data preparation\n#### 5.4.1 Plotting a static ternary diagram\n\nUse the *ggtern()* function from the ggtern package to create a basic ternary plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05a_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05a_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n#### 5.4.2 Plotting an interactive ternary diagram\n\nThe code below uses the [plot_ly()](https://www.rdocumentation.org/packages/plotly/versions/4.10.4) function from the **Plotly R** package to create an interactive ternary plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# reusable function for creating annotation object\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-eacddf6a1e43c65a83fc\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-eacddf6a1e43c65a83fc\">{\"x\":{\"visdat\":{\"9aa02de52628\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"9aa02de52628\",\"attrs\":{\"9aa02de52628\":{\"a\":{},\"b\":{},\"c\":{},\"color\":[\"black\"],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatterternary\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"annotations\":[{\"text\":\"Ternary Markers\",\"x\":0.10000000000000001,\"y\":1,\"ax\":0,\"ay\":0,\"xref\":\"paper\",\"yref\":\"paper\",\"align\":\"center\",\"font\":{\"family\":\"serif\",\"size\":15,\"color\":\"white\"},\"bgcolor\":\"#b3b3b3\",\"bordercolor\":\"black\",\"borderwidth\":2},{\"text\":\"Ternary Markers\",\"x\":0.10000000000000001,\"y\":1,\"ax\":0,\"ay\":0,\"xref\":\"paper\",\"yref\":\"paper\",\"align\":\"center\",\"font\":{\"family\":\"serif\",\"size\":15,\"color\":\"white\"},\"bgcolor\":\"#b3b3b3\",\"bordercolor\":\"black\",\"borderwidth\":2},{\"text\":\"Ternary Markers\",\"x\":0.10000000000000001,\"y\":1,\"ax\":0,\"ay\":0,\"xref\":\"paper\",\"yref\":\"paper\",\"align\":\"center\",\"font\":{\"family\":\"serif\",\"size\":15,\"color\":\"white\"},\"bgcolor\":\"#b3b3b3\",\"bordercolor\":\"black\",\"borderwidth\":2}],\"ternary\":{\"aaxis\":{\"title\":\"Young\",\"tickformat\":\".0%\",\"tickfont\":{\"size\":10}},\"baxis\":{\"title\":\"Active\",\"tickformat\":\".0%\",\"tickfont\":{\"size\":10}},\"caxis\":{\"title\":\"Old\",\"tickformat\":\".0%\",\"tickfont\":{\"size\":10}}},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"a\":[1330,5880,5430,4930,1960,3580,2170,4570,1150,6130,2030,19180,7100,11210,9260,9430,8710,1440,6480,8280,7210,1550,6830,2990,4350,4010,2770,3430,5500,6780,3170,420,3020,260,1670,1720,2380,1810,800,3100,3880,2470,1940,2810,3780,5610,2050,8740,8520,1130,8270,6600,5980,1970,1860,2860,3410,1760,1650,2960,120,620,6520,10920,10900,10000,6620,12980,3160,6320,3640,3850,1840,1420,1960,130,30,130,90,8490,7330,2990,6460,1200,6550,10340,7850,6780,7450,3670,12190,120,150,4840,3930,5670,4940,8920,13710,19300,11640,2690,20320,7740,2560,1490,2500,150,2360,2110,2940,10,630,2410,6740,2770,20,30,980,360,270,40,370,7380,1110,860,2850,200,100,10,120,180,2440,1230,10,4220,570,0,9370,16820,2440,11730,16130,70,15940,5790,16050,1380,2930,3090,2350,180,4060,3650,110,170,1140,800,10,50,30,2290,960,720,480,320,60,210,600,0,650,30,270,50,470,260,90,4440,9320,2570,8230,1920,550,14340,6670,17850,18300,18460,2460,3770,5230,8460,4580,3820,0,10,740,510,170,10740,35900,22030,470,1650,2870,370,970,3070,2360,1850,1690,1530,2380,2240,1330,7210,2760,710,230,12150,3200,10730,31770,14070,8330,2330,5470,240,7480,1190,320,17730,9990,13540],\"b\":[2770,16970,15700,13300,3620,9600,4650,12580,2410,14580,4360,48300,15570,27340,19350,23190,22610,3560,17330,18000,16800,3280,16220,8330,9350,9370,5900,8010,11410,16640,7850,910,8660,610,3750,4840,6340,5330,1980,7070,10570,7080,5600,7550,9150,14000,4050,16960,19480,2260,15840,12220,12530,3360,3510,4930,5870,3670,3120,5930,370,820,12890,19140,19690,20320,15130,25120,7860,17070,9420,8970,3380,3390,3480,510,190,510,450,24310,18320,7710,16440,2860,15680,28800,18270,15160,19160,8080,26570,280,540,11110,9510,15270,11830,17800,32920,40760,22960,4960,41410,21590,7150,4930,6980,530,6240,5790,6670,40,1250,5500,15070,5990,200,110,2210,690,580,160,960,19220,2050,1490,5370,390,250,100,270,890,6440,3910,230,8830,1290,0,18550,33140,4480,21430,28870,140,28320,10780,28590,4320,6350,7460,7450,520,8820,9150,140,460,2730,1970,70,210,70,6810,2160,1820,1130,890,140,780,1710,100,1980,90,950,160,1180,1140,140,8480,18720,5520,15810,3590,1000,26160,12930,31820,36400,37430,4880,7790,15440,21410,9730,9720,100,120,1790,1190,390,24500,81520,48300,1090,4050,5320,810,2100,7410,5650,4810,4900,4220,6170,6730,3040,16770,8270,1470,430,21000,7640,20770,58380,24020,18380,6640,9140,550,18000,2350,850,34470,25550,34480],\"c\":[730,5480,5960,4780,1200,3360,1300,4800,640,4270,850,15150,3190,9530,5460,5850,7230,1560,4920,3990,5520,260,3600,1990,1340,2100,1430,1660,2110,3400,3240,100,3510,250,970,1840,2780,2350,410,1960,3510,3120,2260,2450,2740,3320,620,2800,3930,430,2220,1890,3590,1070,880,1320,1390,1060,860,1880,110,50,2100,2830,2180,3370,3510,3350,2830,6130,2780,2930,670,1240,750,220,0,30,70,7240,5530,1600,5170,710,2830,7180,4180,3810,5880,2470,5540,10,220,3350,1800,4550,3170,3500,8240,5650,4050,740,7140,6700,2530,2560,2500,160,2150,1830,1460,10,250,1490,5720,1590,20,10,540,130,150,30,280,5760,750,480,1000,140,100,0,70,450,2070,2200,50,1600,300,170,2650,6040,340,3060,2950,40,4160,910,2870,1760,2040,3020,3410,140,2150,3040,0,20,540,510,20,50,0,2700,390,300,320,260,0,300,520,40,830,0,120,40,530,540,0,1260,2500,400,2170,720,180,3250,1590,4160,5990,5410,1210,2360,4480,7430,1970,2700,20,10,200,100,150,5150,17670,9660,180,800,1240,250,580,3120,2010,1310,1710,1810,2260,2350,1040,4900,3260,260,70,2830,2050,3080,6910,3080,4090,1570,700,150,3560,690,210,4740,5330,7770],\"type\":\"scatterternary\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(0,0,0,1)\",\"line\":{\"color\":\"rgba(0,0,0,1)\"}},\"textfont\":{\"color\":\"rgba(0,0,0,1)\"},\"line\":{\"color\":\"rgba(0,0,0,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n### 5.5 References\n-   Kam, T.S(2024). [Visual Statistical Analysis.](https://r4va.netlify.app/chap13)\n\n\n### 5.6 Takeaway\n::: callout-tip\n## Key takeaways\n-   Ternary plots are powerful for visualizing three-variable compositional data.\n-   ggtern makes it easy to create and customize ternary plots in R.\n-   Plotly enhances interactivity, making ternary plots more intuitive for exploration.\n::: \n\n### 5.7 Further exploration\n\n1.  To explore ternary plot by planning area (PA)\n\n**Question:** Do different planning areas (PA) have distinct age distributions?\n\nObservations:\n\n-   All regions have a similar age distribution, with no extreme differences.\n-   The working-age (\"Active\") population is the largest group across all regions.\n\n::: panel-tabset\n## Graph\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex05a_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Categorize Planning Areas into broader Regions\nregion_mapping <- c(\n  # **North Region**\n  \"Woodlands\" = \"North\", \"Sembawang\" = \"North\", \"Yishun\" = \"North\", \n  \"Mandai\" = \"North\", \"Simpang\" = \"North\", \"Seletar\" = \"North\", \"Central Water Catchment\" = \"North\",\n\n  # **West Region**\n  \"Bukit Batok\" = \"West\", \"Bukit Panjang\" = \"West\", \"Choa Chu Kang\" = \"West\", \n  \"Clementi\" = \"West\", \"Jurong East\" = \"West\", \"Jurong West\" = \"West\", \n  \"Tengah\" = \"West\", \"Tuas\" = \"West\", \"Pioneer\" = \"West\", \n  \"Western Islands\" = \"West\", \"Western Water Catchment\" = \"West\",\n  \"Boon Lay\" = \"West\", \"Boon Lay/Pioneer\" = \"West\", \"Sungei Kadut\" = \"West\", \"Lim Chu Kang\" = \"West\",\n\n  # **East Region**\n  \"Bedok\" = \"East\", \"Changi\" = \"East\", \"Pasir Ris\" = \"East\", \"Tampines\" = \"East\", \n  \"Paya Lebar\" = \"East\", \"Changi Bay\" = \"East\",\n\n  # **South Region**\n  \"Bukit Merah\" = \"South\", \"Queenstown\" = \"South\", \"Sentosa\" = \"South\", \n  \"Marina East\" = \"South\", \"Marina South\" = \"South\", \"Southern Islands\" = \"South\",\n  \"Singapore River\" = \"South\", \"Straits View\" = \"South\", \"Outram\" = \"South\",\n\n  # **Central Region**\n  \"Ang Mo Kio\" = \"Central\", \"Bishan\" = \"Central\", \"Toa Payoh\" = \"Central\", \n  \"Kallang\" = \"Central\", \"Marine Parade\" = \"Central\", \"Downtown Core\" = \"Central\",\n  \"Geylang\" = \"Central\", \"Hougang\" = \"Central\", \"Novena\" = \"Central\", \"Newton\" = \"Central\",\n  \"Orchard\" = \"Central\", \"River Valley\" = \"Central\", \"Rochor\" = \"Central\", \n  \"Tanglin\" = \"Central\", \"Serangoon\" = \"Central\", \"Sengkang\" = \"Central\", \n  \"Punggol\" = \"Central\", \"Museum\" = \"Central\", \"North-Eastern Islands\" = \"Central\",\n  \"Bukit Timah\" = \"Central\",  # **Added Missing Bukit Timah**\n  \n  # **Other / Unclassified**\n  \"Not Stated\" = \"Other\"  # **Added Missing \"Not Stated\"**\n)\n\n# **Step 1: Assign Regions based on Planning Areas (PA)**\npop_data <- pop_data %>%\n  mutate(Region = recode(PA, !!!region_mapping, .default = \"Other\"))  # Assign regions\n\n# Ensure the Age_Group column is properly categorized\npop_data <- pop_data %>%\n  mutate(Age_Group = case_when(\n    AG %in% c(\"AGE0-4\", \"AGE5-9\", \"AGE10-14\", \"AGE15-19\", \"AGE20-24\") ~ \"Young\",\n    AG %in% c(\"AGE25-29\", \"AGE30-34\", \"AGE35-39\", \"AGE40-44\", \"AGE45-49\", \"AGE50-54\") ~ \"Active\",\n    AG %in% c(\"AGE55-59\", \"AGE60-64\", \"AGE65-69\", \"AGE70-74\", \"AGE75-79\", \"AGE80-84\", \"AGE85+\") ~ \"Old\",\n    TRUE ~ NA_character_  # Assign NA to any undefined age groups\n  )) %>%\n  filter(!is.na(Age_Group))  # Remove any rows with missing Age_Group\n\n# Summarize population by Region and Age_Group\ndf_region <- pop_data %>%\n  group_by(Region, Age_Group) %>%\n  summarise(Population = sum(Population, na.rm = TRUE), .groups = \"drop\") %>%\n  pivot_wider(names_from = Age_Group, values_from = Population, values_fill = list(Population = 0))  # Convert to wide format\n\n# Convert population counts to proportions\ndf_region <- df_region %>%\n  mutate(Total = Young + Active + Old,\n         Young = Young / Total,\n         Active = Active / Total,\n         Old = Old / Total) %>%\n  select(Region, Young, Active, Old)\n\nggtern(data = df_region, aes(x = Active, y = Young, z = Old)) +  # Swapped x and y\n  geom_point(aes(color = Region), size = 4) +  \n  labs(title = \"Age Distribution by Region\",\n       x = \"Active\",   # Left axis\n       y = \"Young\",    # Top axis\n       z = \"Old\") +    # Right axis\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    legend.text = element_text(size = 9),\n    plot.title = element_text(size = 14),\n    axis.title = element_text(size = 11),\n    axis.text = element_text(size = 10, color = \"black\"),\n    axis.title.x = element_text(margin = margin(t = 10)),  # Space below \"Active\"\n    axis.title.y = element_text(margin = margin(r = 10)),  # Space right of \"Young\"\n    axis.title.z = element_text(margin = margin(l = 10))   # Space left of \"Old\"\n  )\n```\n:::\n\n\n\n:::\n\n2.  To explore ternary plot by planning area (PA) - using interactive plot - `plotly`\n\n::: panel-tabset\n## Graph\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f5e6dab0e0c387cc6c8e\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f5e6dab0e0c387cc6c8e\">{\"x\":{\"visdat\":{\"9aa04e1927d6\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"9aa04e1927d6\",\"attrs\":{\"9aa04e1927d6\":{\"a\":{},\"b\":{},\"c\":{},\"text\":{},\"mode\":\"markers\",\"marker\":{\"size\":10},\"hoverinfo\":\"text\",\"color\":{},\"colors\":[\"#F8766D\",\"#00BA38\",\"#619CFF\",\"#B79F00\",\"#00BFC4\",\"#F564E3\"],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatterternary\"}},\"layout\":{\"margin\":{\"b\":100,\"l\":100,\"t\":100,\"r\":100},\"title\":{\"text\":\"Interactive Ternary Plot: Age Distribution by Region\",\"font\":{\"size\":16}},\"ternary\":{\"sum\":1,\"aaxis\":{\"title\":\"Young\",\"min\":0,\"max\":1,\"tickformat\":\".0%\",\"titlefont\":{\"size\":14},\"tickfont\":{\"size\":12},\"titleoffset\":40},\"baxis\":{\"title\":\"Active\",\"min\":0,\"max\":1,\"tickformat\":\".0%\",\"titlefont\":{\"size\":14},\"tickfont\":{\"size\":12},\"titleoffset\":40},\"caxis\":{\"title\":\"Old\",\"min\":0,\"max\":1,\"tickformat\":\".0%\",\"titlefont\":{\"size\":14},\"tickfont\":{\"size\":12},\"titleoffset\":40}},\"legend\":{\"orientation\":\"h\",\"x\":0.5,\"y\":-0.20000000000000001,\"xanchor\":\"center\",\"yanchor\":\"top\"},\"annotations\":[{\"text\":\"Hover over points for details\",\"x\":0.5,\"y\":1.1499999999999999,\"xref\":\"paper\",\"yref\":\"paper\",\"showarrow\":false,\"font\":{\"size\":12,\"color\":\"black\"}}],\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"a\":[0.25093439277120427],\"b\":[0.51270794738849301],\"c\":[0.23635765984030266],\"text\":\"Region: Central <br>Young: 25.09 % <br>Active: 51.27 % <br>Old: 23.64 %\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(248,118,109,1)\",\"size\":10,\"line\":{\"color\":\"rgba(248,118,109,1)\"}},\"hoverinfo\":\"text\",\"type\":\"scatterternary\",\"name\":\"Central\",\"textfont\":{\"color\":\"rgba(248,118,109,1)\"},\"line\":{\"color\":\"rgba(248,118,109,1)\"},\"frame\":null},{\"a\":[0.28396593111898999],\"b\":[0.50827951481306644],\"c\":[0.20775455406794358],\"text\":\"Region: East <br>Young: 28.4 % <br>Active: 50.83 % <br>Old: 20.78 %\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(183,159,0,1)\",\"size\":10,\"line\":{\"color\":\"rgba(183,159,0,1)\"}},\"hoverinfo\":\"text\",\"type\":\"scatterternary\",\"name\":\"East\",\"textfont\":{\"color\":\"rgba(183,159,0,1)\"},\"line\":{\"color\":\"rgba(183,159,0,1)\"},\"frame\":null},{\"a\":[0.30005739242419999],\"b\":[0.53592159168323117],\"c\":[0.16402101589256884],\"text\":\"Region: North <br>Young: 30.01 % <br>Active: 53.59 % <br>Old: 16.4 %\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(0,186,56,1)\",\"size\":10,\"line\":{\"color\":\"rgba(0,186,56,1)\"}},\"hoverinfo\":\"text\",\"type\":\"scatterternary\",\"name\":\"North\",\"textfont\":{\"color\":\"rgba(0,186,56,1)\"},\"line\":{\"color\":\"rgba(0,186,56,1)\"},\"frame\":null},{\"a\":[0.25567010309278349],\"b\":[0.55876288659793816],\"c\":[0.18556701030927836],\"text\":\"Region: Other <br>Young: 25.57 % <br>Active: 55.88 % <br>Old: 18.56 %\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(0,191,196,1)\",\"size\":10,\"line\":{\"color\":\"rgba(0,191,196,1)\"}},\"hoverinfo\":\"text\",\"type\":\"scatterternary\",\"name\":\"Other\",\"textfont\":{\"color\":\"rgba(0,191,196,1)\"},\"line\":{\"color\":\"rgba(0,191,196,1)\"},\"frame\":null},{\"a\":[0.20527765363709116],\"b\":[0.4981822339087687],\"c\":[0.29654011245414014],\"text\":\"Region: South <br>Young: 20.53 % <br>Active: 49.82 % <br>Old: 29.65 %\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(97,156,255,1)\",\"size\":10,\"line\":{\"color\":\"rgba(97,156,255,1)\"}},\"hoverinfo\":\"text\",\"type\":\"scatterternary\",\"name\":\"South\",\"textfont\":{\"color\":\"rgba(97,156,255,1)\"},\"line\":{\"color\":\"rgba(97,156,255,1)\"},\"frame\":null},{\"a\":[0.28495647855018963],\"b\":[0.52840388853976872],\"c\":[0.18663963291004163],\"text\":\"Region: West <br>Young: 28.5 % <br>Active: 52.84 % <br>Old: 18.66 %\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(245,100,227,1)\",\"size\":10,\"line\":{\"color\":\"rgba(245,100,227,1)\"}},\"hoverinfo\":\"text\",\"type\":\"scatterternary\",\"name\":\"West\",\"textfont\":{\"color\":\"rgba(245,100,227,1)\"},\"line\":{\"color\":\"rgba(245,100,227,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(tidyr)\n\n# Define custom colors matching the attached legend\ncustom_colors <- c(\n  \"Central\" = \"#F8766D\",  \n  \"North\" = \"#00BA38\",     \n  \"South\" = \"#619CFF\",     \n  \"East\" = \"#B79F00\",      \n  \"Other\" = \"#00BFC4\",     \n  \"West\" = \"#F564E3\"       \n)\n\n# Create the interactive ternary plot with custom legend colors\nplot_ly(\n  df_region, \n  a = ~Young,   # Left side\n  b = ~Active,  # Top\n  c = ~Old,     # Right side\n  text = ~paste(\"Region:\", Region, \n                \"<br>Young:\", round(Young * 100, 2), \"%\", \n                \"<br>Active:\", round(Active * 100, 2), \"%\", \n                \"<br>Old:\", round(Old * 100, 2), \"%\"), \n  color = ~Region, \n  colors = custom_colors,  \n  type = 'scatterternary',\n  mode = 'markers',\n  marker = list(size = 10),\n  hoverinfo = \"text\"  \n) %>%\n  layout(\n    title = list(text = \"Interactive Ternary Plot: Age Distribution by Region\", font = list(size = 16)),\n    margin = list(l = 100, r = 100, b = 100, t = 100),  # Adjust margins to prevent label clipping\n    ternary = list(\n      sum = 1,  # Ensure the ternary plot normalizes proportions\n      aaxis = list(title = \"Young\", min = 0, max = 1, tickformat = \".0%\", titlefont = list(size = 14), tickfont = list(size = 12), titleoffset = 40),\n      baxis = list(title = \"Active\", min = 0, max = 1, tickformat = \".0%\", titlefont = list(size = 14), tickfont = list(size = 12), titleoffset = 40),\n      caxis = list(title = \"Old\", min = 0, max = 1, tickformat = \".0%\", titlefont = list(size = 14), tickfont = list(size = 12), titleoffset = 40)\n    ),\n    legend = list(\n      orientation = \"h\",  # Horizontal legend\n      x = 0.5, y = -0.2,  # Centered at bottom\n      xanchor = \"center\", yanchor = \"top\"\n    ),\n    annotations = list(\n      list(\n        text = \"Hover over points for details\",\n        x = 0.5, y = 1.15,\n        xref = \"paper\", yref = \"paper\",\n        showarrow = FALSE,\n        font = list(size = 12, color = \"black\")\n      )\n    )\n  )\n```\n:::\n\n\n\n\n:::",
    "supporting": [
      "Hands-on_Ex05a_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}