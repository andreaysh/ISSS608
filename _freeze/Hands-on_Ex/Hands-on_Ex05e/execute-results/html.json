{
  "hash": "355a1f1d670ac1f982bf8cf1190c9187",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 05e\"\nauthor: \"Andrea Yeo\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n[With the assistance of ChatGPT]{style=\"font-size: 14px;\"}\n\n## 5. Treemap Visualisation with R\n\n### 5.1 Overview\n\nIn this hands-on exercise, we will learn how to design treemaps using R. We will first manipulate transaction data into a treemap structure with [**dplyr**](https://www.rdocumentation.org/packages/dplyr/versions/0.5.0), then create a static treemap using [**treemap package**](https://www.rdocumentation.org/packages/treemap/versions/2.4-4/topics/treemap), and finally design an interactive version with [**d3treeR**](https://www.rdocumentation.org/packages/d3treeR/versions/0.1/topics/d3tree).\n\n### 5.2 Installing and Launching R Packages\n\nFor this exercise, the below R packages will be used: - - [**treemap**](https://www.rdocumentation.org/packages/treemap/versions/2.4-4/topics/treemap): Creates hierarchical treemaps to visualize data distributions using nested rectangles. - [**treemapify**](https://www.rdocumentation.org/packages/treemapify/versions/0.2.1):Provides `ggplot2` support for creating treemaps, allowing seamless integration with other visualizations. - [**tidyverse**](https://www.rdocumentation.org/packages/tidyverse/versions/2.0.0): A collection of R packages designed for data science, including `ggplot2`, `dplyr`, and `tidyr` for data manipulation and visualization.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(treemap, treemapify, tidyverse) \n```\n:::\n\n\n\n### 5.3 Data Wrangling\n\nIn this exercise, we will use the *REALIS2018.csv* dataset, which contains private property transaction records from 2018. The data is sourced from the REALIS portal of Singapore's Urban Redevelopment Authority (URA) and provides insights into real estate transactions.\n\n#### 5.3.1 Importing the data set\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2018 <- read_csv(\"data/realis2018.csv\")\n```\n:::\n\n\n\nWe will check the dataset using below\n\n-   `glimpse()`: provides a transposed overview of a dataset, showing variables and their types in a concise format.\n-   `head()`: displays the first few rows of a dataset (default is 6 rows) to give a quick preview of the data.\n-   `summary()`: generates a statistical summary of each variable, including measures like mean, median, and range for numeric data.\n-   `duplicated()`:returns a logical vector indicating which elements or rows in a vector or data frame are duplicates.\n-   `Sum(is.na())`: counts the number of missing values (NA) in each column of the data frame.\n-   `spec()`: use `spec()` to quickly inspect the column\n\n::: panel-tabset\n## glimpse()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(realis2018)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 23,205\nColumns: 20\n$ `Project Name`                <chr> \"ADANA @ THOMSON\", \"ALANA\", \"ALANA\", \"AL…\n$ Address                       <chr> \"8 Old Upper Thomson Road  #05-03\", \"156…\n$ `No. of Units`                <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ `Area (sqm)`                  <dbl> 52, 284, 256, 256, 277, 285, 234, 155, 1…\n$ `Type of Area`                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Transacted Price ($)`        <dbl> 888888, 2530000, 2390863, 2450000, 19800…\n$ `Nett Price($)`               <chr> \"-\", \"-\", \"2382517\", \"2441654\", \"-\", \"-\"…\n$ `Unit Price ($ psm)`          <dbl> 17094, 8908, 9307, 9538, 7148, 6947, 147…\n$ `Unit Price ($ psf)`          <dbl> 1588, 828, 865, 886, 664, 645, 1371, 149…\n$ `Sale Date`                   <chr> \"4-Jul-18\", \"5-Oct-18\", \"9-Jun-18\", \"14-…\n$ `Property Type`               <chr> \"Apartment\", \"Terrace House\", \"Terrace H…\n$ Tenure                        <chr> \"Freehold\", \"103 Yrs From 12/08/2013\", \"…\n$ `Completion Date`             <chr> \"2018\", \"2018\", \"2018\", \"2018\", \"2008\", …\n$ `Type of Sale`                <chr> \"New Sale\", \"Sub Sale\", \"New Sale\", \"New…\n$ `Purchaser Address Indicator` <chr> \"Private\", \"Private\", \"HDB\", \"N.A\", \"Pri…\n$ `Postal District`             <dbl> 20, 28, 28, 28, 26, 26, 26, 26, 26, 26, …\n$ `Postal Sector`               <dbl> 57, 80, 80, 80, 78, 78, 78, 78, 78, 78, …\n$ `Postal Code`                 <dbl> 573868, 804555, 804529, 804540, 786300, …\n$ `Planning Region`             <chr> \"North East Region\", \"North East Region\"…\n$ `Planning Area`               <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\"…\n```\n\n\n:::\n:::\n\n\n\n## head()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(realis2018)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 20\n  `Project Name`  Address             `No. of Units` `Area (sqm)` `Type of Area`\n  <chr>           <chr>                        <dbl>        <dbl> <chr>         \n1 ADANA @ THOMSON 8 Old Upper Thomso…              1           52 Strata        \n2 ALANA           156 Sunrise Terrace              1          284 Strata        \n3 ALANA           104 Sunrise Terrace              1          256 Strata        \n4 ALANA           126 Sunrise Terrace              1          256 Strata        \n5 ATELIER VILLAS  43 Yio Chu Kang Dr…              1          277 Strata        \n6 ATELIER VILLAS  11 Yio Chu Kang Dr…              1          285 Strata        \n# ℹ 15 more variables: `Transacted Price ($)` <dbl>, `Nett Price($)` <chr>,\n#   `Unit Price ($ psm)` <dbl>, `Unit Price ($ psf)` <dbl>, `Sale Date` <chr>,\n#   `Property Type` <chr>, Tenure <chr>, `Completion Date` <chr>,\n#   `Type of Sale` <chr>, `Purchaser Address Indicator` <chr>,\n#   `Postal District` <dbl>, `Postal Sector` <dbl>, `Postal Code` <dbl>,\n#   `Planning Region` <chr>, `Planning Area` <chr>\n```\n\n\n:::\n:::\n\n\n\n## summary()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(realis2018)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Project Name         Address           No. of Units   Area (sqm)    \n Length:23205       Length:23205       Min.   :1     Min.   :  24.0  \n Class :character   Class :character   1st Qu.:1     1st Qu.:  67.0  \n Mode  :character   Mode  :character   Median :1     Median :  98.0  \n                                       Mean   :1     Mean   : 118.2  \n                                       3rd Qu.:1     3rd Qu.: 127.0  \n                                       Max.   :1     Max.   :4836.0  \n Type of Area       Transacted Price ($) Nett Price($)      Unit Price ($ psm)\n Length:23205       Min.   :    40000    Length:23205       Min.   :  355     \n Class :character   1st Qu.:   950000    Class :character   1st Qu.:11231     \n Mode  :character   Median :  1280000    Mode  :character   Median :14621     \n                    Mean   :  1734099                       Mean   :15246     \n                    3rd Qu.:  1858000                       3rd Qu.:18075     \n                    Max.   :100000000                       Max.   :54363     \n Unit Price ($ psf)  Sale Date         Property Type         Tenure         \n Min.   :  33       Length:23205       Length:23205       Length:23205      \n 1st Qu.:1043       Class :character   Class :character   Class :character  \n Median :1358       Mode  :character   Mode  :character   Mode  :character  \n Mean   :1416                                                               \n 3rd Qu.:1679                                                               \n Max.   :5050                                                               \n Completion Date    Type of Sale       Purchaser Address Indicator\n Length:23205       Length:23205       Length:23205               \n Class :character   Class :character   Class :character           \n Mode  :character   Mode  :character   Mode  :character           \n                                                                  \n                                                                  \n                                                                  \n Postal District Postal Sector    Postal Code     Planning Region   \n Min.   : 1.00   Min.   : 1.00   Min.   : 18965   Length:23205      \n 1st Qu.:10.00   1st Qu.:26.00   1st Qu.:267952   Class :character  \n Median :15.00   Median :45.00   Median :456068   Mode  :character  \n Mean   :14.96   Mean   :42.66   Mean   :434269                     \n 3rd Qu.:19.00   3rd Qu.:54.00   3rd Qu.:548461                     \n Max.   :28.00   Max.   :82.00   Max.   :829750                     \n Planning Area     \n Length:23205      \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n```\n\n\n:::\n:::\n\n\n\n## duplicated()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2018[duplicated(realis2018),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 20\n# ℹ 20 variables: Project Name <chr>, Address <chr>, No. of Units <dbl>,\n#   Area (sqm) <dbl>, Type of Area <chr>, Transacted Price ($) <dbl>,\n#   Nett Price($) <chr>, Unit Price ($ psm) <dbl>, Unit Price ($ psf) <dbl>,\n#   Sale Date <chr>, Property Type <chr>, Tenure <chr>, Completion Date <chr>,\n#   Type of Sale <chr>, Purchaser Address Indicator <chr>,\n#   Postal District <dbl>, Postal Sector <dbl>, Postal Code <dbl>,\n#   Planning Region <chr>, Planning Area <chr>\n```\n\n\n:::\n:::\n\n\n\n## sum(is.na())\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(realis2018))  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n## spec()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspec(realis2018)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncols(\n  `Project Name` = col_character(),\n  Address = col_character(),\n  `No. of Units` = col_double(),\n  `Area (sqm)` = col_double(),\n  `Type of Area` = col_character(),\n  `Transacted Price ($)` = col_double(),\n  `Nett Price($)` = col_character(),\n  `Unit Price ($ psm)` = col_double(),\n  `Unit Price ($ psf)` = col_double(),\n  `Sale Date` = col_character(),\n  `Property Type` = col_character(),\n  Tenure = col_character(),\n  `Completion Date` = col_character(),\n  `Type of Sale` = col_character(),\n  `Purchaser Address Indicator` = col_character(),\n  `Postal District` = col_double(),\n  `Postal Sector` = col_double(),\n  `Postal Code` = col_double(),\n  `Planning Region` = col_character(),\n  `Planning Area` = col_character()\n)\n```\n\n\n:::\n:::\n\n\n:::\n\nThe realis2018 tibble contains 12 attributes, as shown above:\n\n-   **Categorical attributes:** Project Name Address Type of Area Sale Date Property Type Tenure Type of Sale Purchaser Address Indicator Planning Region Planning Area\n\n-   **Continuous attributes:** No. of Units Area (sqm) Transacted Price ($)    Nett Price($) Unit Price (\\$ psm) Unit Price (\\$ psf) Completion Date Postal District Postal Sector Postal Code\n\n#### 5.3.2 Data Wrangling and Manipulation\n\nThe **REALIS2018** dataset contains highly disaggregated transaction records, making it unsuitable for direct treemap visualization.\n\nTo prepare the data, we will use `dplyr` functions to group transactions by key attributes such as **Project Name, Planning Region, Planning Area, Property Type, and Type of Sale.**\n\nWe will then apply summary statistics using `summarise()` to compute **Total Units Sold, Total Area, Median Unit Price, and Median Transacted Price.**\n\nThe `group_by()` function will structure the data for aggregation, ensuring that `summarise()` calculates relevant statistics for each group, creating a summarized dataset suitable for treemap visualization.\n\n#### 5.3.3 Grouped summaries without the Pipe\n\nThe code below shows a typical two lines code approach to perform the steps.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2018_grouped <- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised <- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n```\n:::\n\n\n\n::: callout-note\n-   Aggregation functions like`sum()` and `median()` in R follow the standard rule for missing values: if any input contains NA, the result will also be NA.\n\n-   To handle this, the argument `na.rm = TRUE` can be used to remove missing values before computation, ensuring accurate summary statistics.\n\n-   This is particularly useful when calculating total units sold, total area, median unit price, and median transacted price in the **REALIS2018** dataset, preventing missing values from affecting the results.\n:::\n\nThe code chunk above is not very efficient because we have to give each intermediate data.frame a name, even though we don’t have to care about it.\n\n#### 5.3.4 Grouped summaries with the Pipe\n\nThe code chunk below shows a more efficient way to tackle the same processes by using the pipe, `%>%`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2018_summarised <- realis2018 %>% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %>%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n```\n:::\n\n\n\n### 5.4 Designing Treemap with treemap Package\n\nThe [treemap package](https://www.rdocumentation.org/packages/treemap/versions/2.4-4/topics/treemap) in R provides a highly flexible `treemap()` function with over **43 arguments** for customization. This section focuses on key parameters to create **elegant and accurate treemaps**, allowing effective visualization of hierarchical data while maintaining clarity and truthfulness.\n\n#### 5.4.1 Designing a static treemap\n\nIn this section, treemap() from the treemap package is used to visualize the distribution of median unit prices and total units sold for resale condominiums by geographic hierarchy in 2017.\n\nFirst, records for resale condominiums are filtered from the `realis2018_selected` dataset to ensure relevant data for visualization.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2018_selected <- realis2018_summarised %>%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")\n```\n:::\n\n\n\n#### 5.4.2 Using the basic arguments\n\nThe code below creates a treemap using three key arguments of treemap():\n\n-   index: Defines hierarchical grouping.\n-   vSize: Specifies the variable determining the rectangle size.\n-   vColor: Assigns colors based on a chosen variable.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\nKey takeaways from the three core treemap() arguments:\n\n-   `index`: Requires at least two column names for hierarchical treemaps. The first column represents the highest level of aggregation, followed by lower levels.\n\n-   `vSize`: Maps rectangle sizes based on a numeric variable, which must contain only non-negative values.\n\n-   `vColor`: Works with the `type` argument to determine rectangle colors. If `type` is not defined, `treemap()` defaults to using `index`, which may result in incorrect coloring. Properly setting `type` ensures colors reflect median unit prices in this case.\n\n#### 5.4.3 Working with vColor and type arguments\n\nIn the code below, `type` argument is define as value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type = \"value\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\nKey insights from the code:\n\n-   The rectangles are **shaded in varying intensities of green**, representing differences in **median unit prices**.\n-   The legend indicates that values are **binned into ten equal intervals (e.g., 0–5000, 5000–10000, etc.)** with a fixed interval of **5000**, ensuring clear data interpretation.\n\n#### 5.4.4 Colours in treemap package\n\nTwo arguments control color mapping in treemap():\n\n-   `mapping`: Defines how values are mapped to colors.\n-   `palette`: Specifies the color scheme.\n\nDifferences:\n\n-   **\"value\" mapping**: Uses a diverging color palette (e.g., \"RdYlBu\"), centering 0 at the middle color and mapping extreme values symmetrically.\n\n-   **\"manual\" mapping**: Maps min(values) to the left-end color, max(values) to the right-end color, and the midpoint to the middle color.\n\n#### 5.4.5 The “value” type treemap\n\nThe code below shows a value type treemap.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\nKey takeaways from the code:\n\n-   Despite using the \"RdYlBu\" color palette, no red rectangles appear because all median unit prices are positive.\n\n-   The legend displays values from 5000 to 45000 due to the default range = c(min(values), max(values)), which applies automatic rounding for better readability.\n\n#### 5.4.6 The “manual” type treemap\n\nThe \"manual\" type maps the value range linearly to the color palette, unlike the \"value\" type, which directly interprets values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\nKey takeaways from the code:\n\n-   **Confusing Color Scheme**: The chosen color mapping makes interpretation difficult.\n-   **Mapping Issue**: The mapping formula `(min(values), mean(range(values))`, `max(values))` may not suit all datasets.\n-   **Diverging Palette Misuse**: Avoid diverging palettes (e.g., RdYlBu) when all values are strictly positive or negative.\n\nTo overcome this problem, a single colour palette such as **Blues** should be used.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n#### 5.4.7 Treemap Layout\n\n-   **Treemap Layouts**: Supports “squarified” and “pivotSize” (default: “pivotSize”).\n-   **Squarified (Bruls et al., 2000)**: Optimizes aspect ratios but ignores sorting order (sortID).\n-   **Pivot-by-Size (Bederson et al., 2002)**: Maintains sorting order while keeping acceptable aspect ratios.\n\n#### 5.4.8 Working with alogorithm argument\n\nThe code below plots a **squarified treemap** by changing the *algorithm* argument.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"squarified\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n#### 5.4.9 Using *sortID*\n\nWith the **“pivotSize”** algorithm, the *sortID* argument controls the placement order of rectangles from top left to bottom right.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n### 5.5 Designing Treemap using treemapify Package\n\nThe [treemapify](https://www.rdocumentation.org/packages/treemapify/versions/0.2.1) package in R is designed for creating treemaps in **ggplot2**.\n\nReferences: (1) [Introduction to treemapify](https://cran.r-project.org/web/packages/treemapify/vignettes/introduction-to-treemapify.html), & (2) [user guide](https://cran.r-project.org/web/packages/treemapify/treemapify.pdf)\n\n#### 5.5.1 Designing a basic treemap\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`),\n       layout = \"scol\",\n       start = \"bottomleft\") + \n  geom_treemap() +\n  scale_fill_gradient(low = \"light blue\", high = \"pink\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n#### 5.5.2 Defining hierarchy\n\n-   Group by Planning Region\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`),\n       start = \"topleft\") + \n  geom_treemap()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n-   Group by Planning Area\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n-   Adding boundary line\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"lightgreen\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"green\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n### 5.6 Designing Interactive Treemap using d3treeR\n\n#### 5.6.1 Installing *d3treeR* package\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"devtools\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(devtools)\n# install_github(\"timelyportfolio/d3treeR\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(d3treeR)\n```\n:::\n\n\n\n#### 5.6.2 Designing An Interactive Treemap\n\nThe code below perform two steps:\n\n1.  Uses `treemap()` to create a treemap from selected variables in the condominium data frame and saves it as an object named **tm**.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm <- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n2.  *d3tree()* is then used to build an interactive treemap.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd3tree(tm,rootname = \"Singapore\" )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"d3tree html-widget html-fill-item\" id=\"htmlwidget-a346ce968efacf749ea7\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a346ce968efacf749ea7\">{\"x\":{\"data\":{\"name\":\"Singapore\",\"id\":1,\"size\":null,\"children\":[{\"name\":\"Central Region\",\"color\":\"#006837\",\"h\":1,\"id\":2,\"size\":10825,\"stdErr\":10825,\"vColor\":20978846.5,\"vColorValue\":20978846.5,\"vSize\":10825,\"w\":0.4664942900237018,\"x0\":0,\"y0\":0,\"children\":[{\"name\":\"Bishan\",\"color\":\"#D9EF8B\",\"h\":0.2165611047442029,\"id\":3,\"size\":698,\"stdErr\":698,\"vColor\":749211.5,\"vColorValue\":749211.5,\"vSize\":698,\"w\":0.1388971682283426,\"x0\":0.3275971217953593,\"y0\":0.3973880869417094},{\"name\":\"Bukit Merah\",\"color\":\"#DCF090\",\"h\":0.2165611047442029,\"id\":4,\"size\":708,\"stdErr\":708,\"vColor\":689448,\"vColorValue\":689448,\"vSize\":708,\"w\":0.1408870990052529,\"x0\":0.1867100227901064,\"y0\":0.3973880869417094},{\"name\":\"Bukit Timah\",\"color\":\"#219B51\",\"h\":0.2702761291218809,\"id\":5,\"size\":1171,\"stdErr\":1171,\"vColor\":2823552.5,\"vColorValue\":2823552.5,\"vSize\":1171,\"w\":0.1867100227901064,\"x0\":0,\"y0\":0.3436730625640314},{\"name\":\"Downtown Core\",\"color\":\"#E0F295\",\"h\":0.225794694775928,\"id\":6,\"size\":439,\"stdErr\":439,\"vColor\":570894,\"vColorValue\":570894,\"vSize\":439,\"w\":0.08378556716830476,\"x0\":0.3035036878329677,\"y0\":0.1715933921657813},{\"name\":\"Geylang\",\"color\":\"#66BD63\",\"h\":0.3860508083140878,\"id\":7,\"size\":1489,\"stdErr\":1489,\"vColor\":2140814.5,\"vColorValue\":2140814.5,\"vSize\":1489,\"w\":0.1662144048445302,\"x0\":0,\"y0\":0.6139491916859122},{\"name\":\"Kallang\",\"color\":\"#A6D96A\",\"h\":0.1747216308670059,\"id\":8,\"size\":757,\"stdErr\":757,\"vColor\":1415268,\"vColorValue\":1415268,\"vSize\":757,\"w\":0.1867100227901064,\"x0\":0,\"y0\":0.1689514316970255},{\"name\":\"Marine Parade\",\"color\":\"#ABDB6D\",\"h\":0.1807986653680943,\"id\":9,\"size\":490,\"stdErr\":490,\"vColor\":1397529.5,\"vColorValue\":1397529.5,\"vSize\":490,\"w\":0.1167936650428614,\"x0\":0.1867100227901064,\"y0\":0},{\"name\":\"Museum\",\"color\":\"#FBFDB9\",\"h\":0.0351116940585223,\"id\":10,\"size\":28,\"stdErr\":28,\"vColor\":135893,\"vColorValue\":135893,\"vSize\":28,\"w\":0.03436565888114059,\"x0\":0.4321286311425612,\"y0\":0.02884174869092903},{\"name\":\"Newton\",\"color\":\"#B0DD70\",\"h\":0.1715933921657813,\"id\":11,\"size\":268,\"stdErr\":268,\"vColor\":1306816,\"vColorValue\":1306816,\"vSize\":268,\"w\":0.06730582648246029,\"x0\":0.3035036878329677,\"y0\":0},{\"name\":\"Novena\",\"color\":\"#40AA59\",\"h\":0.1689514316970255,\"id\":12,\"size\":732,\"stdErr\":732,\"vColor\":2483944.5,\"vColorValue\":2483944.5,\"vSize\":732,\"w\":0.1867100227901064,\"x0\":0,\"y0\":0},{\"name\":\"Orchard\",\"color\":\"#F3FAAF\",\"h\":0.06395344274945129,\"id\":13,\"size\":42,\"stdErr\":42,\"vColor\":251834.5,\"vColorValue\":251834.5,\"vSize\":42,\"w\":0.02830113084329224,\"x0\":0.403827500299269,\"y0\":0},{\"name\":\"Outram\",\"color\":\"#FBFDB9\",\"h\":0.02884174869092899,\"id\":14,\"size\":23,\"stdErr\":23,\"vColor\":130671,\"vColorValue\":130671,\"vSize\":23,\"w\":0.03436565888114063,\"x0\":0.4321286311425612,\"y0\":0},{\"name\":\"Queenstown\",\"color\":\"#C9E881\",\"h\":0.3860508083140878,\"id\":15,\"size\":1432,\"stdErr\":1432,\"vColor\":953979.5,\"vColorValue\":953979.5,\"vSize\":1432,\"w\":0.1598515968686147,\"x0\":0.1662144048445302,\"y0\":0.6139491916859122},{\"name\":\"River Valley\",\"color\":\"#72C264\",\"h\":0.216589421573615,\"id\":16,\"size\":587,\"stdErr\":587,\"vColor\":1998014,\"vColorValue\":1998014,\"vSize\":587,\"w\":0.1167936650428614,\"x0\":0.1867100227901064,\"y0\":0.1807986653680943},{\"name\":\"Rochor\",\"color\":\"#E4F39A\",\"h\":0.1076399494163301,\"id\":17,\"size\":132,\"stdErr\":132,\"vColor\":520971,\"vColorValue\":520971,\"vSize\":132,\"w\":0.05284682173009263,\"x0\":0.3708095143154281,\"y0\":0.06395344274945132},{\"name\":\"Singapore River\",\"color\":\"#ECF7A4\",\"h\":0.10763994941633,\"id\":18,\"size\":107,\"stdErr\":107,\"vColor\":378001,\"vColorValue\":378001,\"vSize\":107,\"w\":0.04283795397818115,\"x0\":0.4236563360455207,\"y0\":0.06395344274945133},{\"name\":\"Southern Islands\",\"color\":\"#F7FBB4\",\"h\":0.06395344274945129,\"id\":19,\"size\":49,\"stdErr\":49,\"vColor\":173903,\"vColorValue\":173903,\"vSize\":49,\"w\":0.03301798598384095,\"x0\":0.3708095143154281,\"y0\":0},{\"name\":\"Tanglin\",\"color\":\"#66BD63\",\"h\":0.225794694775928,\"id\":20,\"size\":415,\"stdErr\":415,\"vColor\":2187332,\"vColorValue\":2187332,\"vSize\":415,\"w\":0.07920503502242932,\"x0\":0.3872892550012725,\"y0\":0.1715933921657814},{\"name\":\"Toa Payoh\",\"color\":\"#DCF090\",\"h\":0.3860508083140878,\"id\":21,\"size\":1258,\"stdErr\":1258,\"vColor\":670769,\"vColorValue\":670769,\"vSize\":1258,\"w\":0.1404282883105568,\"x0\":0.326066001713145,\"y0\":0.6139491916859122}]},{\"name\":\"East Region\",\"color\":\"#006837\",\"h\":0.6954765751211631,\"id\":22,\"size\":3775,\"stdErr\":3775,\"vColor\":4616987.5,\"vColorValue\":4616987.5,\"vSize\":3775,\"w\":0.2339122015285163,\"x0\":0.7660877984714837,\"y0\":0.3045234248788369,\"children\":[{\"name\":\"Bedok\",\"color\":\"#006837\",\"h\":0.3334602916474981,\"id\":23,\"size\":1810,\"stdErr\":1810,\"vColor\":3529868.5,\"vColorValue\":3529868.5,\"vSize\":1810,\"w\":0.2339122015285163,\"x0\":0.7660877984714837,\"y0\":0.666539708352502},{\"name\":\"Changi\",\"color\":\"#FFFFBF\",\"h\":0.001895373211904017,\"id\":24,\"size\":5,\"stdErr\":5,\"vColor\":20564,\"vColorValue\":20564,\"vSize\":5,\"w\":0.113682520335742,\"x0\":0.886317479664258,\"y0\":0.3045234248788369},{\"name\":\"Pasir Ris\",\"color\":\"#DCF090\",\"h\":0.360120910261761,\"id\":25,\"size\":950,\"stdErr\":950,\"vColor\":669171,\"vColorValue\":669171,\"vSize\":950,\"w\":0.113682520335742,\"x0\":0.886317479664258,\"y0\":0.306418798090741},{\"name\":\"Tampines\",\"color\":\"#ECF7A4\",\"h\":0.362016283473665,\"id\":26,\"size\":1010,\"stdErr\":1010,\"vColor\":397384,\"vColorValue\":397384,\"vSize\":1010,\"w\":0.1202296811927743,\"x0\":0.7660877984714837,\"y0\":0.304523424878837}]},{\"name\":\"North East Region\",\"color\":\"#006837\",\"h\":0.6954765751211631,\"id\":27,\"size\":4835,\"stdErr\":4835,\"vColor\":4208661,\"vColorValue\":4208661,\"vSize\":4835,\"w\":0.2995935084477819,\"x0\":0.4664942900237018,\"y0\":0.3045234248788369,\"children\":[{\"name\":\"Ang Mo Kio\",\"color\":\"#DCF090\",\"h\":0.1240051577145652,\"id\":28,\"size\":316,\"stdErr\":316,\"vColor\":640722.5,\"vColorValue\":640722.5,\"vSize\":316,\"w\":0.1098160354391928,\"x0\":0.656271763032291,\"y0\":0.427351318437884},{\"name\":\"Hougang\",\"color\":\"#99D368\",\"h\":0.4486435238475507,\"id\":29,\"size\":1875,\"stdErr\":1875,\"vColor\":1617014.5,\"vColorValue\":1617014.5,\"vSize\":1875,\"w\":0.1801019007180478,\"x0\":0.4664942900237018,\"y0\":0.5513564761524492},{\"name\":\"Punggol\",\"color\":\"#FBFDB9\",\"h\":0.1228278935590471,\"id\":30,\"size\":313,\"stdErr\":313,\"vColor\":126110,\"vColorValue\":126110,\"vSize\":313,\"w\":0.1098160354391928,\"x0\":0.656271763032291,\"y0\":0.3045234248788369},{\"name\":\"Sengkang\",\"color\":\"#EFF8AA\",\"h\":0.4486435238475507,\"id\":31,\"size\":1244,\"stdErr\":1244,\"vColor\":348343.5,\"vColorValue\":348343.5,\"vSize\":1244,\"w\":0.1194916077297341,\"x0\":0.6465961907417496,\"y0\":0.5513564761524492},{\"name\":\"Serangoon\",\"color\":\"#A6D96A\",\"h\":0.2468330512736124,\"id\":32,\"size\":1087,\"stdErr\":1087,\"vColor\":1476470.5,\"vColorValue\":1476470.5,\"vSize\":1087,\"w\":0.1897774730085891,\"x0\":0.4664942900237018,\"y0\":0.3045234248788368}]},{\"name\":\"North Region\",\"color\":\"#CEEA84\",\"h\":0.3045234248788368,\"id\":33,\"size\":1117,\"stdErr\":1117,\"vColor\":866745,\"vColorValue\":866745,\"vSize\":1117,\"w\":0.1580705246799801,\"x0\":0.8419294753200199,\"y0\":0,\"children\":[{\"name\":\"Mandai\",\"color\":\"#FFFFBF\",\"h\":0.02952717240970038,\"id\":34,\"size\":29,\"stdErr\":29,\"vColor\":62025,\"vColorValue\":62025,\"vSize\":29,\"w\":0.04232476595303115,\"x0\":0.9503778606067911,\"y0\":0},{\"name\":\"Sembawang\",\"color\":\"#F3FAAF\",\"h\":0.1968360902081649,\"id\":35,\"size\":286,\"stdErr\":286,\"vColor\":244075,\"vColorValue\":244075,\"vSize\":286,\"w\":0.06261519398680651,\"x0\":0.9373848060131935,\"y0\":0.1076873346706719},{\"name\":\"Sungei Kadut\",\"color\":\"#FFFFBF\",\"h\":0.02952717240970027,\"id\":36,\"size\":5,\"stdErr\":5,\"vColor\":24359,\"vColorValue\":24359,\"vSize\":5,\"w\":0.007297373440177785,\"x0\":0.9927026265598221,\"y0\":0},{\"name\":\"Woodlands\",\"color\":\"#F7FBB4\",\"h\":0.1076873346706719,\"id\":37,\"size\":271,\"stdErr\":271,\"vColor\":164195,\"vColorValue\":164195,\"vSize\":271,\"w\":0.1084483852867712,\"x0\":0.8419294753200199,\"y0\":0},{\"name\":\"Yishun\",\"color\":\"#EFF8AA\",\"h\":0.1968360902081649,\"id\":38,\"size\":436,\"stdErr\":436,\"vColor\":313496,\"vColorValue\":313496,\"vSize\":436,\"w\":0.09545533069317358,\"x0\":0.8419294753200199,\"y0\":0.1076873346706719},{\"name\":\"YISHUN\",\"color\":\"#FFFFBF\",\"h\":0.07816016226097153,\"id\":39,\"size\":90,\"stdErr\":90,\"vColor\":58595,\"vColorValue\":58595,\"vSize\":90,\"w\":0.04962213939320893,\"x0\":0.9503778606067911,\"y0\":0.02952717240970034}]},{\"name\":\"West Region\",\"color\":\"#79C565\",\"h\":0.3045234248788369,\"id\":40,\"size\":2653,\"stdErr\":2653,\"vColor\":1919890.5,\"vColorValue\":1919890.5,\"vSize\":2653,\"w\":0.3754351852963181,\"x0\":0.4664942900237018,\"y0\":0,\"children\":[{\"name\":\"Bukit Batok\",\"color\":\"#E0F295\",\"h\":0.2045358948206935,\"id\":41,\"size\":583,\"stdErr\":583,\"vColor\":618812.5,\"vColorValue\":618812.5,\"vSize\":583,\"w\":0.1228336754003785,\"x0\":0.6316404872497866,\"y0\":0.09998753005814345},{\"name\":\"Bukit Panjang\",\"color\":\"#ECF7A4\",\"h\":0.09998753005814345,\"id\":42,\"size\":285,\"stdErr\":285,\"vColor\":374543.5,\"vColorValue\":374543.5,\"vSize\":285,\"w\":0.1228336754003785,\"x0\":0.6316404872497866,\"y0\":0},{\"name\":\"Choa Chu Kang\",\"color\":\"#FBFDB9\",\"h\":0.1320587020510166,\"id\":43,\"size\":268,\"stdErr\":268,\"vColor\":125114,\"vColorValue\":125114,\"vSize\":268,\"w\":0.08745531266985472,\"x0\":0.7544741626501652,\"y0\":0.03498570091650066},{\"name\":\"Clementi\",\"color\":\"#E4F39A\",\"h\":0.3045234248788369,\"id\":44,\"size\":1167,\"stdErr\":1167,\"vColor\":531398.5,\"vColorValue\":531398.5,\"vSize\":1167,\"w\":0.1651461972260849,\"x0\":0.4664942900237018,\"y0\":0},{\"name\":\"Jurong East\",\"color\":\"#FFFFBF\",\"h\":0.03498570091650072,\"id\":45,\"size\":71,\"stdErr\":71,\"vColor\":65122,\"vColorValue\":65122,\"vSize\":71,\"w\":0.08745531266985475,\"x0\":0.7544741626501652,\"y0\":0},{\"name\":\"Jurong West\",\"color\":\"#F7FBB4\",\"h\":0.1374790219113196,\"id\":46,\"size\":279,\"stdErr\":279,\"vColor\":204900,\"vColorValue\":204900,\"vSize\":279,\"w\":0.08745531266985472,\"x0\":0.7544741626501652,\"y0\":0.1670444029675173}]}]},\"meta\":{\"type\":\"value\",\"vSize\":\"Total Unit Sold\",\"vColor\":\"Median Unit Price ($ psm)\",\"stdErr\":\"Total Unit Sold\",\"algorithm\":\"pivotSize\",\"vpCoorX\":[0.02812148481439815,0.9718785151856019],\"vpCoorY\":[0.1716850393700787,0.9103149606299213],\"aspRatio\":1.788798157900348,\"range\":[0,3500000],\"mapping\":[null,null,null],\"draw\":true},\"options\":{\"id\":\"id\",\"celltext\":\"name\",\"valueField\":\"size\"}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n### 5.7 References\n\n-   Kam, T.S(2024). [Visual Statistical Analysis.](https://r4va.netlify.app/chap16)\n\n### 5.8 Takeaway\n\n::: callout-tip\n## Key takeaways\n\n-   Treemaps in R: Use treemap for static visualizations, treemapify for ggplot2 integration, and d3treeR for interactivity.\n-   Treemap Arguments:\n    -   index: Defines hierarchy.\n    -   vSize: Sets rectangle size.\n    -   vColor: Determines color mapping.\n-   Color Mapping:\n    -   \"value\": Uses diverging palettes, best for datasets with mixed values.\n    -   \"manual\": Maps values linearly but can be misleading.\n-   Treemap Layouts:\n    -   \"squarified\": Better aspect ratios but ignores sorting.\n    -   \"pivotSize\": Preserves sorting (sortID argument) while maintaining acceptable aspect ratios.\n-   Interactive Treemaps: Convert static treemaps (treemap()) into interactive ones using d3tree().\n:::\n\n### 5.9 Further exploration\n\n1.  Helps identify which property type dominates each region and highlights the price variations across Singapore's real estate market.\n\n-   This treemap visualizes the distribution of property types across different planning regions in Singapore.\n\n-   Each rectangle's size represents the total number of units sold\n\n-   The color intensity corresponds to the median unit price per square meter (psm).\n\nKey insights:\n\n-   Larger rectangles indicate dominant property types in each region.\n\n-   Central Region has the largest share of Apartments and Condominiums, reflecting its high-density residential areas.\n\n-   North-East, East, and North Regions show a mix of Condominiums, Apartments, and landed properties like Terrace Houses.\n\n-   Darker purple shades signify areas with higher property prices, particularly in central locations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\n# Load required libraries\nlibrary(tidyverse)\nlibrary(treemap)\nlibrary(d3treeR)\n\n# Summarize data: Total units sold and median unit price per sqm\nrealis2018_summarised <- realis2018 %>%\n  group_by(`Planning Region`, `Property Type`) %>%\n  summarise(\n    `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n    `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n    `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n    `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE)\n  )\n\n# Create a static treemap\ntm <- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Property Type\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette = \"Purples\",\n        title=\"Property Type Distribution by Planning Region\",\n        title.legend = \"Median Unit Price (S$ per sqm)\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05e_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert to interactive treemap\nd3tree(tm, rootname = \"Singapore\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"d3tree html-widget html-fill-item\" id=\"htmlwidget-89305f4dfbc5b96d42f2\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-89305f4dfbc5b96d42f2\">{\"x\":{\"data\":{\"name\":\"Singapore\",\"id\":1,\"size\":null,\"children\":[{\"name\":\"Central Region\",\"color\":\"#3F007D\",\"h\":1,\"id\":2,\"size\":10825,\"stdErr\":10825,\"vColor\":95038.5,\"vColorValue\":95038.5,\"vSize\":10825,\"w\":0.4664942900237018,\"x0\":0,\"y0\":0,\"children\":[{\"name\":\"Apartment\",\"color\":\"#3F007D\",\"h\":0.4679907621247113,\"id\":3,\"size\":5066,\"stdErr\":5066,\"vColor\":18592,\"vColorValue\":18592,\"vSize\":5066,\"w\":0.4664942900237018,\"x0\":0,\"y0\":0.5320092378752888},{\"name\":\"Condominium\",\"color\":\"#440981\",\"h\":0.5320092378752888,\"id\":4,\"size\":5030,\"stdErr\":5030,\"vColor\":17775,\"vColorValue\":17775,\"vSize\":5030,\"w\":0.4074433545440563,\"x0\":0,\"y0\":0},{\"name\":\"Detached House\",\"color\":\"#4A1587\",\"h\":0.09487133185704737,\"id\":5,\"size\":130,\"stdErr\":130,\"vColor\":16186.5,\"vColorValue\":16186.5,\"vSize\":130,\"w\":0.0590509354796455,\"x0\":0.4074433545440563,\"y0\":0.01532536899229228},{\"name\":\"Executive Condominium\",\"color\":\"#5D3997\",\"h\":0.01532536899229228,\"id\":6,\"size\":21,\"stdErr\":21,\"vColor\":12132,\"vColorValue\":12132,\"vSize\":21,\"w\":0.0590509354796455,\"x0\":0.4074433545440563,\"y0\":0},{\"name\":\"Semi-Detached House\",\"color\":\"#4F1F8B\",\"h\":0.1714981768185087,\"id\":7,\"size\":235,\"stdErr\":235,\"vColor\":15127,\"vColorValue\":15127,\"vSize\":235,\"w\":0.0590509354796455,\"x0\":0.4074433545440563,\"y0\":0.1101967008493396},{\"name\":\"Terrace House\",\"color\":\"#4F1F8B\",\"h\":0.2503143602074404,\"id\":8,\"size\":343,\"stdErr\":343,\"vColor\":15226,\"vColorValue\":15226,\"vSize\":343,\"w\":0.0590509354796455,\"x0\":0.4074433545440563,\"y0\":0.2816948776678484}]},{\"name\":\"East Region\",\"color\":\"#3F007D\",\"h\":0.6954765751211631,\"id\":9,\"size\":3775,\"stdErr\":3775,\"vColor\":69802.5,\"vColorValue\":69802.5,\"vSize\":3775,\"w\":0.2339122015285163,\"x0\":0.7660877984714837,\"y0\":0.3045234248788369,\"children\":[{\"name\":\"Apartment\",\"color\":\"#51228C\",\"h\":0.232316810921268,\"id\":10,\"size\":671,\"stdErr\":671,\"vColor\":14507,\"vColorValue\":14507,\"vSize\":671,\"w\":0.1244687448260384,\"x0\":0.7660877984714837,\"y0\":0.3045234248788369},{\"name\":\"Condominium\",\"color\":\"#5D3997\",\"h\":0.4631597641998951,\"id\":11,\"size\":2514,\"stdErr\":2514,\"vColor\":11934.5,\"vColorValue\":11934.5,\"vSize\":2514,\"w\":0.2339122015285163,\"x0\":0.7660877984714837,\"y0\":0.5368402358001049},{\"name\":\"Detached House\",\"color\":\"#62439C\",\"h\":0.06536371290327213,\"id\":12,\"size\":45,\"stdErr\":45,\"vColor\":10855,\"vColorValue\":10855,\"vSize\":45,\"w\":0.0296684069374187,\"x0\":0.9703315930625813,\"y0\":0.3045234248788368},{\"name\":\"Executive Condominium\",\"color\":\"#715FAA\",\"h\":0.065363712903272,\"id\":13,\"size\":121,\"stdErr\":121,\"vColor\":7922,\"vColorValue\":7922,\"vSize\":121,\"w\":0.07977504976505917,\"x0\":0.8905565432975221,\"y0\":0.3045234248788369},{\"name\":\"Semi-Detached House\",\"color\":\"#61409B\",\"h\":0.1669530980179961,\"id\":14,\"size\":131,\"stdErr\":131,\"vColor\":11394,\"vColorValue\":11394,\"vSize\":131,\"w\":0.0338138981793033,\"x0\":0.9661861018206966,\"y0\":0.3698871377821087},{\"name\":\"Terrace House\",\"color\":\"#582F93\",\"h\":0.166953098017996,\"id\":15,\"size\":293,\"stdErr\":293,\"vColor\":13190,\"vColorValue\":13190,\"vSize\":293,\"w\":0.07562955852317457,\"x0\":0.8905565432975221,\"y0\":0.3698871377821089}]},{\"name\":\"North East Region\",\"color\":\"#3F007D\",\"h\":0.6954765751211631,\"id\":16,\"size\":4835,\"stdErr\":4835,\"vColor\":70288,\"vColorValue\":70288,\"vSize\":4835,\"w\":0.2995935084477819,\"x0\":0.4664942900237018,\"y0\":0.3045234248788369,\"children\":[{\"name\":\"Apartment\",\"color\":\"#53258E\",\"h\":0.4575617343248025,\"id\":17,\"size\":1901,\"stdErr\":1901,\"vColor\":14419,\"vColorValue\":14419,\"vSize\":1901,\"w\":0.1790403205153201,\"x0\":0.4664942900237018,\"y0\":0.5424382656751975},{\"name\":\"Condominium\",\"color\":\"#5D3997\",\"h\":0.4575617343248025,\"id\":18,\"size\":1280,\"stdErr\":1280,\"vColor\":11918,\"vColorValue\":11918,\"vSize\":1280,\"w\":0.1205531879324618,\"x0\":0.6455346105390221,\"y0\":0.5424382656751975},{\"name\":\"Detached House\",\"color\":\"#64469E\",\"h\":0.2379148407963607,\"id\":19,\"size\":35,\"stdErr\":35,\"vColor\":10620,\"vColorValue\":10620,\"vSize\":35,\"w\":0.006339644979245714,\"x0\":0.759748153492238,\"y0\":0.3045234248788368},{\"name\":\"Executive Condominium\",\"color\":\"#64469E\",\"h\":0.2379148407963606,\"id\":20,\"size\":897,\"stdErr\":897,\"vColor\":10458,\"vColorValue\":10458,\"vSize\":897,\"w\":0.1624760441823823,\"x0\":0.4664942900237018,\"y0\":0.3045234248788368},{\"name\":\"Semi-Detached House\",\"color\":\"#64469E\",\"h\":0.05371207624626976,\"id\":21,\"size\":163,\"stdErr\":163,\"vColor\":10526,\"vColorValue\":10526,\"vSize\":163,\"w\":0.1307778192861539,\"x0\":0.6289703342060842,\"y0\":0.3045234248788369},{\"name\":\"Terrace House\",\"color\":\"#5B3696\",\"h\":0.1842027645500908,\"id\":22,\"size\":559,\"stdErr\":559,\"vColor\":12347,\"vColorValue\":12347,\"vSize\":559,\"w\":0.1307778192861539,\"x0\":0.6289703342060842,\"y0\":0.3582355011251066}]},{\"name\":\"North Region\",\"color\":\"#3F007D\",\"h\":0.3045234248788368,\"id\":23,\"size\":1117,\"stdErr\":1117,\"vColor\":60708,\"vColorValue\":60708,\"vSize\":1117,\"w\":0.1580705246799801,\"x0\":0.8419294753200199,\"y0\":0,\"children\":[{\"name\":\"Apartment\",\"color\":\"#54288F\",\"h\":0.05397998041719757,\"id\":24,\"size\":39,\"stdErr\":39,\"vColor\":13980,\"vColorValue\":13980,\"vSize\":39,\"w\":0.03113510334605673,\"x0\":0.9648732167377821,\"y0\":0},{\"name\":\"Condominium\",\"color\":\"#684DA1\",\"h\":0.2505434444616392,\"id\":25,\"size\":453,\"stdErr\":453,\"vColor\":10000,\"vColorValue\":10000,\"vSize\":453,\"w\":0.07791724448316757,\"x0\":0.9220827555168324,\"y0\":0.05397998041719757},{\"name\":\"Detached House\",\"color\":\"#715FAA\",\"h\":0.05397998041719757,\"id\":26,\"size\":5,\"stdErr\":5,\"vColor\":7940,\"vColorValue\":7940,\"vSize\":5,\"w\":0.003991679916161056,\"x0\":0.9960083200838389,\"y0\":0},{\"name\":\"Executive Condominium\",\"color\":\"#6D58A6\",\"h\":0.2505434444616392,\"id\":27,\"size\":466,\"stdErr\":466,\"vColor\":8729,\"vColorValue\":8729,\"vSize\":466,\"w\":0.08015328019681252,\"x0\":0.8419294753200199,\"y0\":0.05397998041719757},{\"name\":\"Semi-Detached House\",\"color\":\"#6A51A3\",\"h\":0.05397998041719757,\"id\":28,\"size\":40,\"stdErr\":40,\"vColor\":9662,\"vColorValue\":9662,\"vSize\":40,\"w\":0.03193343932928892,\"x0\":0.9329397774084933,\"y0\":0},{\"name\":\"Terrace House\",\"color\":\"#664A9F\",\"h\":0.05397998041719757,\"id\":29,\"size\":114,\"stdErr\":114,\"vColor\":10397,\"vColorValue\":10397,\"vSize\":114,\"w\":0.0910103020884734,\"x0\":0.8419294753200199,\"y0\":0}]},{\"name\":\"West Region\",\"color\":\"#3F007D\",\"h\":0.3045234248788369,\"id\":30,\"size\":2653,\"stdErr\":2653,\"vColor\":64487.5,\"vColorValue\":64487.5,\"vSize\":2653,\"w\":0.3754351852963181,\"x0\":0.4664942900237018,\"y0\":0,\"children\":[{\"name\":\"Apartment\",\"color\":\"#51228C\",\"h\":0.3045234248788369,\"id\":31,\"size\":1061,\"stdErr\":1061,\"vColor\":14727,\"vColorValue\":14727,\"vSize\":1061,\"w\":0.1501457714283428,\"x0\":0.638150105992203,\"y0\":0},{\"name\":\"Condominium\",\"color\":\"#61409B\",\"h\":0.3045234248788369,\"id\":32,\"size\":1213,\"stdErr\":1213,\"vColor\":11495,\"vColorValue\":11495,\"vSize\":1213,\"w\":0.1716558159685013,\"x0\":0.4664942900237018,\"y0\":0},{\"name\":\"Detached House\",\"color\":\"#664A9F\",\"h\":0.03294316733517741,\"id\":33,\"size\":6,\"stdErr\":6,\"vColor\":10342,\"vColorValue\":10342,\"vSize\":6,\"w\":0.007848819204801086,\"x0\":0.8340806561152188,\"y0\":0},{\"name\":\"Executive Condominium\",\"color\":\"#7262AC\",\"h\":0.1623053610172166,\"id\":34,\"size\":202,\"stdErr\":202,\"vColor\":7701,\"vColorValue\":7701,\"vSize\":202,\"w\":0.05363359789947399,\"x0\":0.788295877420546,\"y0\":0.1422180638616204},{\"name\":\"Semi-Detached House\",\"color\":\"#6A51A3\",\"h\":0.03294316733517751,\"id\":35,\"size\":35,\"stdErr\":35,\"vColor\":9660,\"vColorValue\":9660,\"vSize\":35,\"w\":0.0457847786946729,\"x0\":0.788295877420546,\"y0\":0},{\"name\":\"Terrace House\",\"color\":\"#64469E\",\"h\":0.1092748965264428,\"id\":36,\"size\":136,\"stdErr\":136,\"vColor\":10562.5,\"vColorValue\":10562.5,\"vSize\":136,\"w\":0.05363359789947399,\"x0\":0.788295877420546,\"y0\":0.0329431673351776}]}]},\"meta\":{\"type\":\"value\",\"vSize\":\"Total Unit Sold\",\"vColor\":\"Median Unit Price ($ psm)\",\"stdErr\":\"Total Unit Sold\",\"algorithm\":\"pivotSize\",\"vpCoorX\":[0.02812148481439815,0.9718785151856019],\"vpCoorY\":[0.1716850393700787,0.9103149606299213],\"aspRatio\":1.788798157900348,\"range\":[8000,18000],\"mapping\":[null,null,null],\"draw\":true},\"options\":{\"id\":\"id\",\"celltext\":\"name\",\"valueField\":\"size\"}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex05e_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/d3-3.5.5/d3.min.js\"></script>\n<link href=\"../site_libs/d3tree-0.1/d3tree.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/d3tree-binding-0.1/d3tree.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}