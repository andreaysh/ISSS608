{
  "hash": "5d362fdd533200381da9ee42524d41dd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 04b\"\nauthor: \"Andrea Yeo\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n[With the assistance of ChatGPT]{style=\"font-size: 14px;\"}\n\n## 4. Visualising Statistical Analysis\n\n### 4.1 Learning outcome\n\nIn this hands-on exercise, we will be exploring:\n\n-   [ggstatsplot](https://www.rdocumentation.org/packages/ggstatsplot/versions/0.6.1) for creating statistical visualizations,\n-   [performance](https://www.rdocumentation.org/packages/performance/versions/0.12.4) for visualizing model diagnostics, and\n-   [parameters](https://www.rdocumentation.org/packages/parameters/versions/0.22.0) for visualizing model parameters.\n\n### 4.2 Visual Statistical Analysis with [`ggstatsplot`](https://indrajeetpatil.github.io/ggstatsplot/index.html)\n\n[`ggstatsplot`](https://indrajeetpatil.github.io/ggstatsplot/index.html) extends ggplot2, integrating statistical test results directly into visualizations.\n\n-   Offers alternative statistical inference methods by default.\n-   Ensures best practices for statistical reporting, following APA standards for consistency.\n-   Example: Displays results from a robust t-test within the plot.\n\n### 4.3 Getting Started\n\n#### 4.3.1 Installing and loading the packages\n\nWe will be using [ggstatsplot](https://www.rdocumentation.org/packages/ggstatsplot/versions/0.6.1) and [tidyverse](https://www.rdocumentation.org/packages/tidyverse/versions/2.0.0) packags.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggstatsplot, tidyverse)\n```\n:::\n\n\n\n#### 4.3.2 Importing data\n\nIn this exercise, **Exam_data.csv** will be used. The \\`read_csv() function from the readr package is used to import the dataset into R and store it as a tibble data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"data/Exam_data.csv\", show_col_types = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstat(exam)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 322 × 7\n   ID         CLASS GENDER RACE    ENGLISH MATHS SCIENCE\n   <chr>      <chr> <chr>  <chr>     <dbl> <dbl>   <dbl>\n 1 Student321 3I    Male   Malay        21     9      15\n 2 Student305 3I    Female Malay        24    22      16\n 3 Student289 3H    Male   Chinese      26    16      16\n 4 Student227 3F    Male   Chinese      27    77      31\n 5 Student318 3I    Male   Malay        27    11      25\n 6 Student306 3I    Female Malay        31    16      16\n 7 Student313 3I    Male   Chinese      31    21      25\n 8 Student316 3I    Male   Malay        31    18      27\n 9 Student312 3I    Male   Malay        33    19      15\n10 Student297 3H    Male   Indian       34    49      37\n# ℹ 312 more rows\n```\n\n\n:::\n:::\n\n\n\n::: callout-note\n-   This section data is the same dataset used in [Hands-on_Ex01](Hands-on_Ex01.html), [Hands-on_Ex02](Hands-on_Ex02.html), [Hands-on_Ex03a](Hands-on_Ex03a.html), and [Hands-on_Ex04a](Hands-on_Ex04a.html)\n:::\n\n#### 4.3.3 One-sample test: [gghistostats()](https://www.rdocumentation.org/packages/ggstatsplot/versions/0.1.4/topics/gghistostats) method\n\n[`gghistostats()`](https://indrajeetpatil.github.io/ggstatsplot/reference/gghistostats.html) will be used to build a visual of one-sample test on English scores.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n#### 4.3.4 Unpacking the Bayes Factor\n\n-   The Bayes Factor quantifies the strength of evidence in favor of one hypothesis over another, comparing the alternative hypothesis (H₁) to the null hypothesis (H₀).\n\n-   It helps evaluate data in support of the null hypothesis while incorporating external information.\n\n-   A common method for approximating the Bayes Factor is the [Schwarz criterion](https://www.statisticshowto.com/bayesian-information-criterion/).\n\n#### 4.3.5 How to interpret Bayes Factor\n\nThe Bayes Factor (BF) is a positive number used to assess the strength of evidence for one hypothesis over another.\n\nRefer [here](https://www.jstor.org/stable/2685729) for one of the most common interpretations of Bayes Factor, first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013.\n\n![](/images/Pic10.jpg){width=\"409\"}\n\n#### 4.3.6 Two-sample mean test: [`ggbetweenstats()`](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html)\n\nThe code below, [`ggbetweenstats()`](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for two-sample mean test of Maths scores by gender.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nDefault information: - statistical details - Bayes Factor - sample sizes - distribution summary\n\n#### 4.3.7 Oneway ANOVA Test: [`ggbetweenstats()`](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html)\n\nThe code below used [`ggbetweenstats()`](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) to build a visual for One-way ANOVA test on English score by race.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nMeaning of the symbol function of `ggbetweenstats()`:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\nTable: **`ggbetweenstats()` symbol arguments meaning**\n\n|Symbol |Meaning                                                          |\n|:------|:----------------------------------------------------------------|\n|ns     |**pairwise.display** - only non-significant                      |\n|s      |**pairwise.display**- only significant                           |\n|all    |**pairwise.display** - everything                                |\n|p      |**type** - Parametric tests (default)                            |\n|np     |**type** - Non-parametric tests (e.g., Kruskal-Wallis, Wilcoxon) |\n|r      |**type** - Robust statistical tests (e.g., trimmed means ANOVA)  |\n|bayes  |**type** - Bayesian analysis for comparisons                     |\n\n\n:::\n:::\n\n\n\n#### 4.3.8 Significant test of correlation: [`ggscatterstats()`](https://indrajeetpatil.github.io/ggstatsplot/reference/ggscatterstats.html)\n\nThe code below, [`ggscatterstats()`](https://indrajeetpatil.github.io/ggstatsplot/reference/ggscatterstats.html) is used to build a visual for significant test of correlation between MATHS and ENGLISH scores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n#### 4.3.9 Significant test of association (dependence): [`ggbarstats()`](https://www.rdocumentation.org/packages/ggstatsplot/versions/0.1.4/topics/ggbarstats)\n\nThe Maths scores is binned into 4-class variables using [`cut()`](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cut)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n```\n:::\n\n\n\nNext, `ggbarstats()` is used to build a visual for significant test of association\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### 4.5 Getting Started\n\nThis section covers visualizing model diagnostics and parameters using the parameters package.\n\nThe Toyota Corolla case study will be used to build a model that identifies key factors influencing used car prices, considering various explanatory variables.\n\n### 4.6 Installing and loading the required libraries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(readxl, performance, parameters, see)\n```\n:::\n\n\n\n#### 4.6.1 Importing Excel file using `readxl` methods\n\nThe code below will use `read_xls()` of [readxl](https://readxl.tidyverse.org/) to import the data worksheet of `ToyoyaCorolla.xls` workbook into R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   <dbl> <chr>    <dbl>     <dbl>     <dbl>    <dbl>  <dbl>         <dbl>  <dbl>\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>, …\n```\n\n\n:::\n:::\n\n\n\nThe output object `car_resale` is a tibble data frame.\n\nWe will check the dataset using below\n\n-   `glimpse()`: provides a transposed overview of a dataset, showing variables and their types in a concise format.\n-   `head()`: displays the first few rows of a dataset (default is 6 rows) to give a quick preview of the data.\n-   `summary()`: generates a statistical summary of each variable, including measures like mean, median, and range for numeric data.\n-   `duplicated()`:returns a logical vector indicating which elements or rows in a vector or data frame are duplicates.\n-   `colSums(is.na())`: counts the number of missing values (NA) in each column of the data frame.\n-   `spec()`: use `spec()` to quickly inspect the column\n\n::: panel-tabset\n## glimpse()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(car_resale)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,436\nColumns: 38\n$ Id               <dbl> 81, 1, 2, 3, 4, 5, 6, 7, 8, 44, 45, 46, 47, 49, 51, 6…\n$ Model            <chr> \"TOYOTA Corolla 1.6 5drs 1 4/5-Doors\", \"TOYOTA Coroll…\n$ Price            <dbl> 18950, 13500, 13750, 13950, 14950, 13750, 12950, 1690…\n$ Age_08_04        <dbl> 25, 23, 23, 24, 26, 30, 32, 27, 30, 27, 22, 23, 27, 2…\n$ Mfg_Month        <dbl> 8, 10, 10, 9, 7, 3, 1, 6, 3, 6, 11, 10, 6, 11, 11, 11…\n$ Mfg_Year         <dbl> 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002, 2002,…\n$ KM               <dbl> 20019, 46986, 72937, 41711, 48000, 38500, 61000, 9461…\n$ Quarterly_Tax    <dbl> 100, 210, 210, 210, 210, 210, 210, 210, 210, 234, 234…\n$ Weight           <dbl> 1180, 1165, 1165, 1165, 1165, 1170, 1170, 1245, 1245,…\n$ Guarantee_Period <dbl> 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,…\n$ HP_Bin           <chr> \"100-120\", \"< 100\", \"< 100\", \"< 100\", \"< 100\", \"< 100…\n$ CC_bin           <chr> \"1600\", \">1600\", \">1600\", \">1600\", \">1600\", \">1600\", …\n$ Doors            <dbl> 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 3, 3,…\n$ Gears            <dbl> 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n$ Cylinders        <dbl> 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,…\n$ Fuel_Type        <chr> \"Petrol\", \"Diesel\", \"Diesel\", \"Diesel\", \"Diesel\", \"Di…\n$ Color            <chr> \"Blue\", \"Blue\", \"Silver\", \"Blue\", \"Black\", \"Black\", \"…\n$ Met_Color        <dbl> 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,…\n$ Automatic        <dbl> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Mfr_Guarantee    <dbl> 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,…\n$ BOVAG_Guarantee  <dbl> 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ ABS              <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airbag_1         <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airbag_2         <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Airco            <dbl> 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Automatic_airco  <dbl> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,…\n$ Boardcomputer    <dbl> 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ CD_Player        <dbl> 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1,…\n$ Central_Lock     <dbl> 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Powered_Windows  <dbl> 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Power_Steering   <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Radio            <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Mistlamps        <dbl> 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Sport_Model      <dbl> 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,…\n$ Backseat_Divider <dbl> 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Metallic_Rim     <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Radio_cassette   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ Tow_Bar          <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n```\n\n\n:::\n:::\n\n\n\n## head()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(car_resale)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 38\n     Id Model      Price Age_08_04 Mfg_Month Mfg_Year    KM Quarterly_Tax Weight\n  <dbl> <chr>      <dbl>     <dbl>     <dbl>    <dbl> <dbl>         <dbl>  <dbl>\n1    81 TOYOTA Co… 18950        25         8     2002 20019           100   1180\n2     1 TOYOTA Co… 13500        23        10     2002 46986           210   1165\n3     2 TOYOTA Co… 13750        23        10     2002 72937           210   1165\n4     3  TOYOTA C… 13950        24         9     2002 41711           210   1165\n5     4 TOYOTA Co… 14950        26         7     2002 48000           210   1165\n6     5 TOYOTA Co… 13750        30         3     2002 38500           210   1170\n# ℹ 29 more variables: Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n## summary()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(car_resale)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Id            Model               Price         Age_08_04    \n Min.   :   1.0   Length:1436        Min.   : 4350   Min.   : 1.00  \n 1st Qu.: 361.8   Class :character   1st Qu.: 8450   1st Qu.:44.00  \n Median : 721.5   Mode  :character   Median : 9900   Median :61.00  \n Mean   : 721.6                      Mean   :10731   Mean   :55.95  \n 3rd Qu.:1081.2                      3rd Qu.:11950   3rd Qu.:70.00  \n Max.   :1442.0                      Max.   :32500   Max.   :80.00  \n   Mfg_Month         Mfg_Year          KM         Quarterly_Tax   \n Min.   : 1.000   Min.   :1998   Min.   :     1   Min.   : 19.00  \n 1st Qu.: 3.000   1st Qu.:1998   1st Qu.: 43000   1st Qu.: 69.00  \n Median : 5.000   Median :1999   Median : 63390   Median : 85.00  \n Mean   : 5.549   Mean   :2000   Mean   : 68533   Mean   : 87.12  \n 3rd Qu.: 8.000   3rd Qu.:2001   3rd Qu.: 87021   3rd Qu.: 85.00  \n Max.   :12.000   Max.   :2004   Max.   :243000   Max.   :283.00  \n     Weight     Guarantee_Period    HP_Bin             CC_bin         \n Min.   :1000   Min.   : 3.000   Length:1436        Length:1436       \n 1st Qu.:1040   1st Qu.: 3.000   Class :character   Class :character  \n Median :1070   Median : 3.000   Mode  :character   Mode  :character  \n Mean   :1072   Mean   : 3.815                                        \n 3rd Qu.:1085   3rd Qu.: 3.000                                        \n Max.   :1615   Max.   :36.000                                        \n     Doors           Gears         Cylinders  Fuel_Type        \n Min.   :2.000   Min.   :3.000   Min.   :4   Length:1436       \n 1st Qu.:3.000   1st Qu.:5.000   1st Qu.:4   Class :character  \n Median :4.000   Median :5.000   Median :4   Mode  :character  \n Mean   :4.033   Mean   :5.026   Mean   :4                     \n 3rd Qu.:5.000   3rd Qu.:5.000   3rd Qu.:4                     \n Max.   :5.000   Max.   :6.000   Max.   :4                     \n    Color             Met_Color        Automatic       Mfr_Guarantee   \n Length:1436        Min.   :0.0000   Min.   :0.00000   Min.   :0.0000  \n Class :character   1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000  \n Mode  :character   Median :1.0000   Median :0.00000   Median :0.0000  \n                    Mean   :0.6748   Mean   :0.05571   Mean   :0.4095  \n                    3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000  \n                    Max.   :1.0000   Max.   :1.00000   Max.   :1.0000  \n BOVAG_Guarantee       ABS            Airbag_1         Airbag_2     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.0000   Median :1.0000   Median :1.0000  \n Mean   :0.8955   Mean   :0.8134   Mean   :0.9708   Mean   :0.7228  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n     Airco        Automatic_airco   Boardcomputer      CD_Player     \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.00000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :1.0000   Median :0.00000   Median :0.0000   Median :0.0000  \n Mean   :0.5084   Mean   :0.05641   Mean   :0.2946   Mean   :0.2187  \n 3rd Qu.:1.0000   3rd Qu.:0.00000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.00000   Max.   :1.0000   Max.   :1.0000  \n  Central_Lock    Powered_Windows Power_Steering       Radio       \n Min.   :0.0000   Min.   :0.000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :1.0000   Median :1.000   Median :1.0000   Median :0.0000  \n Mean   :0.5801   Mean   :0.562   Mean   :0.9777   Mean   :0.1462  \n 3rd Qu.:1.0000   3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.0000   Max.   :1.000   Max.   :1.0000   Max.   :1.0000  \n   Mistlamps      Sport_Model     Backseat_Divider  Metallic_Rim   \n Min.   :0.000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.000   1st Qu.:0.0000   1st Qu.:1.0000   1st Qu.:0.0000  \n Median :0.000   Median :0.0000   Median :1.0000   Median :0.0000  \n Mean   :0.257   Mean   :0.3001   Mean   :0.7702   Mean   :0.2047  \n 3rd Qu.:1.000   3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:0.0000  \n Max.   :1.000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n Radio_cassette      Tow_Bar      \n Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000  \n Mean   :0.1455   Mean   :0.2779  \n 3rd Qu.:0.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000  \n```\n\n\n:::\n:::\n\n\n\n## duplicated()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar_resale[duplicated(car_resale),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 38\n# ℹ 38 variables: Id <dbl>, Model <chr>, Price <dbl>, Age_08_04 <dbl>,\n#   Mfg_Month <dbl>, Mfg_Year <dbl>, KM <dbl>, Quarterly_Tax <dbl>,\n#   Weight <dbl>, Guarantee_Period <dbl>, HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n## colSum(is.na(*dataset*))\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(car_resale))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              Id            Model            Price        Age_08_04 \n               0                0                0                0 \n       Mfg_Month         Mfg_Year               KM    Quarterly_Tax \n               0                0                0                0 \n          Weight Guarantee_Period           HP_Bin           CC_bin \n               0                0                0                0 \n           Doors            Gears        Cylinders        Fuel_Type \n               0                0                0                0 \n           Color        Met_Color        Automatic    Mfr_Guarantee \n               0                0                0                0 \n BOVAG_Guarantee              ABS         Airbag_1         Airbag_2 \n               0                0                0                0 \n           Airco  Automatic_airco    Boardcomputer        CD_Player \n               0                0                0                0 \n    Central_Lock  Powered_Windows   Power_Steering            Radio \n               0                0                0                0 \n       Mistlamps      Sport_Model Backseat_Divider     Metallic_Rim \n               0                0                0                0 \n  Radio_cassette          Tow_Bar \n               0                0 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspec(car_resale)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n:::\n\n\n:::\n\n#### 4.6.2 Multiple Regression Model using [lm()](https://en.wikipedia.org/wiki/Linear_regression)\n\nThe code used to calibrate a multiple linear regression model by using [**lm()**](https://en.wikipedia.org/wiki/Linear_regression)of Base Stats of R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n```\n\n\n:::\n:::\n\n\n\n#### 4.6.3 Multiple diagnostic: checking for multicolinearity:\n\nThe code below checks for multicolinearity using the [*check_colinearity()*](https://easystats.github.io/performance/reference/check_collinearity.html) of [performance](https://easystats.github.io/performance/index.html) package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_collinearity(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c <- check_collinearity(model)\nplot(check_c)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n#### 4.6.4 Model diagnostic: checking normality assumption\n\nThe code below checks for normality using the [*check_normality()*](https://easystats.github.io/performance/reference/check_normality.html) of [performance](https://easystats.github.io/performance/index.html) package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_n <- check_normality(model1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(check_n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n#### 4.6.5 Model diagnostic: checking model for homogeneity of variances\n\nThe code below checks for homogeneity of variances using the [*check_heteroscedasticity()*](https://easystats.github.io/performance/reference/check_heteroscedasticity.html) of [performance](https://easystats.github.io/performance/index.html) package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_h <- check_heteroscedasticity(model1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(check_h)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n#### 4.6.6 Model diagnostic: complete check\n\nWe can perform a complete check by using [*check_model()*](https://easystats.github.io/performance/reference/check_model.html)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n#### 4.6.7 Visualising regression parameters: see methods\n\nThe code below utilizes the `plot()` function from the [see package](https://cran.r-project.org/web/packages/see/index.html) and the parameters() function from the [parameters package](https://cran.r-project.org/web/packages/parameters/index.html) to visualize the parameters of a regression model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(parameters(model1))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n#### 4.6.8 Visualising regression parameters: [ggcoefstats()](https://www.rdocumentation.org/packages/ggstatsplot/versions/0.0.11/topics/ggcoefstats) methods\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoefstats(model1, \n            output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n### 4.7 References\n\n-   Kam, T.S(2024). [Visual Statistical Analysis.](https://r4va.netlify.app/chap10#learning-outcome)\n\n### 4.8 Takeaway\n\n::: callout-tip\n## Key takeaways\n\n-   Learnt that by combining plots with statistical summaries can improves data storytelling.\n-   Learnt that it is important to check for assumptions like multicollinearity, normality, and homoscedasticity before interpreting model results.\n-   Key R packages used - `ggstatsplot`, `performance`,`parameters`,and `see`to perform visual statistical analyses and model diagnostics.\n:::\n\n### 4.9 Further exploration\n\n1.  To explore the distribution of MATHS Grades across different class\n\nColor gradient progresses smoothly from red to green, aligning with grade performance levels -\n\n-   Grade F --\\> Red\n-   Grade D --\\> Orange\n-   Grade C --\\> Yellow\n-   Grade B --\\> Light Green\n-   Grade A --\\> Green\n\nObservations:\n\n-   Class 3A has the highest proportion of top scorers (Grade A).\n-   Class 3I has the most failing students (91% Grade F).\n-   Class 3F has the most balanced grade distribution.\n\n::: panel-tabset\n## Graph\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam1 <- exam %>% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0, 49, 59, 69, 79, 100),  # 5 bins\n               labels = c(\"Grade F\", \"Grade D\", \"Grade C\", \"Grade B\", \"Grade A\"),  # Labels\n               right = TRUE)  # Include upper bound in interval\n)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04b_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n:::\n\n2.  To explore demographics factors such as GENDER, RACE and CLASS affecting MATHS scores.\n\nDependent variables: MATHS score\n\nIndependent variable: GENDER, RACE, CLASS\n\n::: panel-tabset\n## Graph - 3 predictors\n\n**The 3 predictors are - GENDER, RACE, CLASS**\n\nObservations:\n\n-   **Model fit**\n    -   Both multiple R-squared (0.8033), and Adjusted R-squared (0.7957) shows a strong model fit\n-   **Impact of GENDER on MATHS scores**\n    -   GENDERMale Coefficient: -0.00676\n    -   No significant difference in MATHS scores between male and female students.\n-   **Impact of RACE on MATHS scores**\n    -   Only Malay students -4.77578 (p = 8.37e-05) show a significant difference, performing worse on average\n-   **Impact of CLASS on MATHS Scores**\n    -   Several CLASS categories have strong negative coefficients with high statistical significance (p \\< 0.001) such as CLASS3I, CLASS3H, CLASS3G, CLASS3E, and CLASS3F\n    -   Class Differences Are Critical, and it shows that Class assignment has the strongest and most significant impact on MATHS scores.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = MATHS ~ GENDER + RACE + CLASS, data = exam)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-31.344  -4.985   0.023   5.399  32.226 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  90.28726    1.51601  59.556  < 2e-16 ***\nGENDERMale   -0.00676    1.02486  -0.007   0.9947    \nRACEIndian   -1.30523    2.76090  -0.473   0.6367    \nRACEMalay    -4.77578    1.19796  -3.987 8.37e-05 ***\nRACEOthers   -3.50495    3.14092  -1.116   0.2653    \nCLASS3B      -3.51440    2.06425  -1.703   0.0897 .  \nCLASS3C     -11.30379    2.04351  -5.532 6.77e-08 ***\nCLASS3D     -11.30251    2.07113  -5.457 9.94e-08 ***\nCLASS3E     -16.76621    2.08137  -8.055 1.74e-14 ***\nCLASS3F     -16.42073    2.08316  -7.883 5.54e-14 ***\nCLASS3G     -32.68651    2.18254 -14.976  < 2e-16 ***\nCLASS3H     -42.93694    2.24643 -19.113  < 2e-16 ***\nCLASS3I     -59.73049    2.49074 -23.981  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 9.03 on 309 degrees of freedom\nMultiple R-squared:  0.8033,\tAdjusted R-squared:  0.7957 \nF-statistic: 105.2 on 12 and 309 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n## Code - 3 predictors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_demographics <- lm(MATHS ~ GENDER + RACE + CLASS, data = exam)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model_demographics)\n```\n:::\n\n\n\n:::\n",
    "supporting": [
      "Hands-on_Ex04b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}